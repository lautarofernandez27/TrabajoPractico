/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import java.awt.Image;
import java.awt.Toolkit;
import java.awt.BorderLayout;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javaapplication9.Ficha;
import javaapplication9.NewHibernateUtil;
import javaapplication9.Producto;
import javaapplication9.Venta;
import javaapplication9.VentaId;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import net.sf.ehcache.hibernate.HibernateUtil;
import org.hibernate.Query;
import org.hibernate.Session;

/**
 *
 * @author Facu
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        this.initComponents();    
        setLocationRelativeTo(null);//ubica en el medio
        setResizable(false);
        setTitle("EL REINO DE LA MIEL");
        panelCaja.setVisible(false);
        panelProductos.setVisible(false);
        panelPersonas.setVisible(false);
        panelRankings.setVisible(false);
        cerrarPestañas();
        modelo = (DefaultTableModel) jTable1.getModel();
        modeloFichas = (DefaultTableModel) jTable3.getModel();
        modeloProductosVenta = (DefaultTableModel) jTable4.getModel();
        jTable1.setModel(modelo);
        jTable2.setModel(modelo);
        jTable3.setModel(modeloFichas);
        jTable4.setModel(modeloProductosVenta);
        jTable5.setModel(modeloFichas);
        jTable6.setModel(modelo);
        jTable7.setModel(modeloFichas);
        jTable9.setModel(modeloFichas);
    
        stockMinimo=5;
        contadorVenta=0;
        
        precioTotalVenta=0d;
        precioSubtotalVenta=0d;
        totalVenta.setText(precioTotalVenta.toString());
        subtotalVenta.setText(precioSubtotalVenta.toString());
    }
    public Image getIconImage(){
        Image getValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("Imagenes/iconoreino.png"));
        return getValue;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botonProducto = new javax.swing.JButton();
        botonCaja = new javax.swing.JButton();
        botonPersonas = new javax.swing.JButton();
        botonRankings = new javax.swing.JButton();
        panelCaja = new javax.swing.JPanel();
        botonVenta = new javax.swing.JButton();
        botonConsignacion = new javax.swing.JButton();
        botonResumen = new javax.swing.JButton();
        botonDevolucion = new javax.swing.JButton();
        botonMovimientos = new javax.swing.JButton();
        panelProductos = new javax.swing.JPanel();
        botonVerListado = new javax.swing.JButton();
        botonNuevoProducto = new javax.swing.JButton();
        botonStock = new javax.swing.JButton();
        panelPersonas = new javax.swing.JPanel();
        botonListado = new javax.swing.JButton();
        botonNuevaFicha = new javax.swing.JButton();
        panelRankings = new javax.swing.JPanel();
        botonListado1 = new javax.swing.JButton();
        botonListado2 = new javax.swing.JButton();
        fondo = new javax.swing.JLabel();
        pestañaPersonas = new javax.swing.JPanel();
        labelDNI = new javax.swing.JLabel();
        labelApellido = new javax.swing.JLabel();
        labelNuevaLider = new javax.swing.JLabel();
        labelNombrePersona = new javax.swing.JLabel();
        labelTipoPersona = new javax.swing.JLabel();
        botonGuardarPersona = new javax.swing.JButton();
        botonCancelarPersona = new javax.swing.JButton();
        ingresaDNI = new javax.swing.JTextField();
        ingresaNombrePersona = new javax.swing.JTextField();
        ingresaApellidoPersona = new javax.swing.JTextField();
        labelEstadoCivil = new javax.swing.JLabel();
        labelFechaNac = new javax.swing.JLabel();
        ingresaDomicilio = new javax.swing.JTextField();
        labelDomicilio = new javax.swing.JLabel();
        ingresaTelefono = new javax.swing.JTextField();
        labelTelefono = new javax.swing.JLabel();
        jComboBoxEstCivil = new javax.swing.JComboBox<>();
        diaNacimiento = new javax.swing.JSpinner();
        mesNacimiento = new javax.swing.JSpinner();
        añoNacimiento = new javax.swing.JSpinner();
        jComboBoxTipo = new javax.swing.JComboBox<>();
        ingresaLocalidad = new javax.swing.JTextField();
        labelLocalidad = new javax.swing.JLabel();
        labelFechaIngreso = new javax.swing.JLabel();
        diaIngreso = new javax.swing.JSpinner();
        mesIngreso = new javax.swing.JSpinner();
        añoIngreso = new javax.swing.JSpinner();
        ingresaCodPostal = new javax.swing.JTextField();
        labelCodPostal = new javax.swing.JLabel();
        pestañaNuevoProd = new javax.swing.JPanel();
        labelIdProd = new javax.swing.JLabel();
        LabelPrecio = new javax.swing.JLabel();
        LabelLinea = new javax.swing.JLabel();
        tituloNuevoProd = new javax.swing.JLabel();
        LabelNombreProd = new javax.swing.JLabel();
        botonGuardarNP = new javax.swing.JButton();
        botonCancelarNP = new javax.swing.JButton();
        ingresaCodProd = new javax.swing.JTextField();
        ingresaNombreProd = new javax.swing.JTextField();
        ingresaLinea = new javax.swing.JTextField();
        ingresaPrecio = new javax.swing.JTextField();
        labelCantidad = new javax.swing.JLabel();
        labelNeto = new javax.swing.JLabel();
        ingresaCantidad = new javax.swing.JTextField();
        jComboBoxNeto = new javax.swing.JComboBox<>();
        LabelCodNoDisp = new javax.swing.JLabel();
        pestañaVenta = new javax.swing.JPanel();
        labelDNI2 = new javax.swing.JLabel();
        labelApellido2 = new javax.swing.JLabel();
        labelNuevaLider2 = new javax.swing.JLabel();
        labelNombrePersona2 = new javax.swing.JLabel();
        labelTipoPersona2 = new javax.swing.JLabel();
        botonRealizarVenta = new javax.swing.JButton();
        botonCancelarVenta = new javax.swing.JButton();
        ingresaDniVenta = new javax.swing.JTextField();
        ingresaNombreVenta = new javax.swing.JTextField();
        ingresaApellidoVenta = new javax.swing.JTextField();
        jComboBoxTipo2 = new javax.swing.JComboBox<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        botonEliminarProductoDeVenta = new javax.swing.JButton();
        botonAgregarProductoAVenta = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        totalVenta = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        subtotalVenta = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        descuentoVenta = new javax.swing.JTextField();
        buscarFichaVenta = new javax.swing.JButton();
        pestañaVerListado = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        tituloListadoProd = new javax.swing.JLabel();
        ingresaFiltroProd = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        cerrarListado = new javax.swing.JButton();
        botonEliminarProd = new javax.swing.JButton();
        botonEditarProd = new javax.swing.JButton();
        pestañaStockMinimo = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        tituloListadoProd1 = new javax.swing.JLabel();
        ingresaFiltroProd1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cerrarStockMinimo = new javax.swing.JButton();
        pestañaEditarProducto = new javax.swing.JPanel();
        labelIdProd1 = new javax.swing.JLabel();
        LabelPrecio1 = new javax.swing.JLabel();
        LabelLinea1 = new javax.swing.JLabel();
        tituloEditarProducto = new javax.swing.JLabel();
        LabelNombreProd1 = new javax.swing.JLabel();
        botonGuardarCambiosProd = new javax.swing.JButton();
        botonCancelarEditarProd = new javax.swing.JButton();
        ingresaCodProd1 = new javax.swing.JTextField();
        ingresaNombreProd1 = new javax.swing.JTextField();
        ingresaLinea1 = new javax.swing.JTextField();
        ingresaPrecio1 = new javax.swing.JTextField();
        labelCantidad1 = new javax.swing.JLabel();
        labelNeto1 = new javax.swing.JLabel();
        ingresaCantidad1 = new javax.swing.JTextField();
        jComboBoxNeto1 = new javax.swing.JComboBox<>();
        pestañaVerFichas = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        tituloListadoFichas = new javax.swing.JLabel();
        ingresaFiltroFicha = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cerrarListado1 = new javax.swing.JButton();
        botonEliminarFicha = new javax.swing.JButton();
        botonEditarFicha = new javax.swing.JButton();
        pestañaEditarPersona = new javax.swing.JPanel();
        labelDNI1 = new javax.swing.JLabel();
        labelApellido1 = new javax.swing.JLabel();
        labelNuevaLider1 = new javax.swing.JLabel();
        labelNombrePersona1 = new javax.swing.JLabel();
        labelTipoPersona1 = new javax.swing.JLabel();
        botonGuardarPersona1 = new javax.swing.JButton();
        botonCancelarPersona1 = new javax.swing.JButton();
        ingresaDNI1 = new javax.swing.JTextField();
        ingresaNombrePersona1 = new javax.swing.JTextField();
        ingresaApellidoPersona1 = new javax.swing.JTextField();
        labelEstadoCivil1 = new javax.swing.JLabel();
        labelFechaNac1 = new javax.swing.JLabel();
        ingresaDomicilio1 = new javax.swing.JTextField();
        labelDomicilio1 = new javax.swing.JLabel();
        ingresaTelefono1 = new javax.swing.JTextField();
        labelTelefono1 = new javax.swing.JLabel();
        jComboBoxEstCivil1 = new javax.swing.JComboBox<>();
        diaNacimiento1 = new javax.swing.JSpinner();
        mesNacimiento1 = new javax.swing.JSpinner();
        añoNacimiento1 = new javax.swing.JSpinner();
        jComboBoxTipo1 = new javax.swing.JComboBox<>();
        ingresaLocalidad1 = new javax.swing.JTextField();
        labelLocalidad1 = new javax.swing.JLabel();
        labelFechaIngreso1 = new javax.swing.JLabel();
        diaIngreso1 = new javax.swing.JSpinner();
        mesIngreso1 = new javax.swing.JSpinner();
        añoIngreso1 = new javax.swing.JSpinner();
        ingresaCodPostal1 = new javax.swing.JTextField();
        labelCodPostal1 = new javax.swing.JLabel();
        pestañaFichasParaVenta = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        tituloListadoFichas1 = new javax.swing.JLabel();
        ingresaFiltroFicha1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        seleccionarFichaVenta = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        pestañaSeleccionarProductoVenta = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        tituloListadoProd2 = new javax.swing.JLabel();
        ingresaFiltroProd2 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        seleccionarFichaVenta1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jSpinner1 = new javax.swing.JSpinner();
        pestañaRankingLider = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable7 = new javax.swing.JTable();
        tituloListadoFichas2 = new javax.swing.JLabel();
        cerrarListado2 = new javax.swing.JButton();
        jComboBoxTipo3 = new javax.swing.JComboBox<>();
        pestañaRankingExpertas = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTable9 = new javax.swing.JTable();
        tituloListadoFichas4 = new javax.swing.JLabel();
        cerrarListado4 = new javax.swing.JButton();
        jComboBoxTipo4 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setIconImage(getIconImage());
        setMaximumSize(new java.awt.Dimension(770, 570));
        setMinimumSize(new java.awt.Dimension(770, 570));
        setPreferredSize(new java.awt.Dimension(770, 570));
        getContentPane().setLayout(null);

        botonProducto.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        botonProducto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/bordoProductos.png"))); // NOI18N
        botonProducto.setBorderPainted(false);
        botonProducto.setContentAreaFilled(false);
        botonProducto.setInheritsPopupMenu(true);
        botonProducto.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/bordoProductosApretado.png"))); // NOI18N
        botonProducto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                botonProductoMouseEntered(evt);
            }
        });
        botonProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonProductoActionPerformed(evt);
            }
        });
        getContentPane().add(botonProducto);
        botonProducto.setBounds(190, 0, 190, 70);

        botonCaja.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        botonCaja.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/bordoCaja.png"))); // NOI18N
        botonCaja.setBorderPainted(false);
        botonCaja.setContentAreaFilled(false);
        botonCaja.setInheritsPopupMenu(true);
        botonCaja.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/bordoCajaApretado.png"))); // NOI18N
        botonCaja.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                botonCajaMouseEntered(evt);
            }
        });
        botonCaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCajaActionPerformed(evt);
            }
        });
        getContentPane().add(botonCaja);
        botonCaja.setBounds(0, 0, 190, 70);

        botonPersonas.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        botonPersonas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/bordoFichas.png"))); // NOI18N
        botonPersonas.setBorderPainted(false);
        botonPersonas.setContentAreaFilled(false);
        botonPersonas.setMaximumSize(new java.awt.Dimension(119, 29));
        botonPersonas.setMinimumSize(new java.awt.Dimension(119, 29));
        botonPersonas.setPreferredSize(new java.awt.Dimension(119, 29));
        botonPersonas.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/bordoFichasApretado.png"))); // NOI18N
        botonPersonas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                botonPersonasMouseEntered(evt);
            }
        });
        botonPersonas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonPersonasActionPerformed(evt);
            }
        });
        getContentPane().add(botonPersonas);
        botonPersonas.setBounds(380, 0, 190, 70);

        botonRankings.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        botonRankings.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/bordoRanking.png"))); // NOI18N
        botonRankings.setBorderPainted(false);
        botonRankings.setContentAreaFilled(false);
        botonRankings.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/bordoRankingApretado.png"))); // NOI18N
        botonRankings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                botonRankingsMouseEntered(evt);
            }
        });
        botonRankings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRankingsActionPerformed(evt);
            }
        });
        getContentPane().add(botonRankings);
        botonRankings.setBounds(570, 0, 200, 70);

        panelCaja.setLayout(null);

        botonVenta.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        botonVenta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/botonVenta.png"))); // NOI18N
        botonVenta.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 0, 0)));
        botonVenta.setContentAreaFilled(false);
        botonVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVentaActionPerformed(evt);
            }
        });
        panelCaja.add(botonVenta);
        botonVenta.setBounds(0, 0, 190, 50);

        botonConsignacion.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        botonConsignacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/botonConsignacion.png"))); // NOI18N
        botonConsignacion.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 0, 0)));
        botonConsignacion.setContentAreaFilled(false);
        botonConsignacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConsignacionActionPerformed(evt);
            }
        });
        panelCaja.add(botonConsignacion);
        botonConsignacion.setBounds(0, 50, 190, 50);

        botonResumen.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        botonResumen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/botonResumen.png"))); // NOI18N
        botonResumen.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 0, 0), 1, true));
        botonResumen.setContentAreaFilled(false);
        botonResumen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonResumenActionPerformed(evt);
            }
        });
        panelCaja.add(botonResumen);
        botonResumen.setBounds(0, 200, 190, 50);

        botonDevolucion.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        botonDevolucion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/botonDevolucion.png"))); // NOI18N
        botonDevolucion.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 0, 0), 1, true));
        botonDevolucion.setContentAreaFilled(false);
        botonDevolucion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonDevolucionActionPerformed(evt);
            }
        });
        panelCaja.add(botonDevolucion);
        botonDevolucion.setBounds(0, 100, 190, 50);

        botonMovimientos.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        botonMovimientos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/botonUltMovimientos.png"))); // NOI18N
        botonMovimientos.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 0, 0), 1, true));
        botonMovimientos.setContentAreaFilled(false);
        botonMovimientos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonMovimientosActionPerformed(evt);
            }
        });
        panelCaja.add(botonMovimientos);
        botonMovimientos.setBounds(0, 150, 190, 50);

        getContentPane().add(panelCaja);
        panelCaja.setBounds(0, 70, 190, 250);

        panelProductos.setLayout(null);

        botonVerListado.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        botonVerListado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/botonVerListado.png"))); // NOI18N
        botonVerListado.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 0, 0), 1, true));
        botonVerListado.setContentAreaFilled(false);
        botonVerListado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVerListadoActionPerformed(evt);
            }
        });
        panelProductos.add(botonVerListado);
        botonVerListado.setBounds(0, 50, 190, 50);

        botonNuevoProducto.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        botonNuevoProducto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/botonNuevoProd.png"))); // NOI18N
        botonNuevoProducto.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 0, 0), 1, true));
        botonNuevoProducto.setContentAreaFilled(false);
        botonNuevoProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonNuevoProductoActionPerformed(evt);
            }
        });
        panelProductos.add(botonNuevoProducto);
        botonNuevoProducto.setBounds(0, 0, 190, 50);

        botonStock.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        botonStock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/botonStockMinimo.png"))); // NOI18N
        botonStock.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 0, 0), 1, true));
        botonStock.setContentAreaFilled(false);
        botonStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonStockActionPerformed(evt);
            }
        });
        panelProductos.add(botonStock);
        botonStock.setBounds(0, 100, 190, 50);

        getContentPane().add(panelProductos);
        panelProductos.setBounds(190, 70, 190, 150);

        panelPersonas.setLayout(null);

        botonListado.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        botonListado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/botonVerListado.png"))); // NOI18N
        botonListado.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 0, 0), 1, true));
        botonListado.setContentAreaFilled(false);
        botonListado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonListadoActionPerformed(evt);
            }
        });
        panelPersonas.add(botonListado);
        botonListado.setBounds(0, 50, 190, 50);

        botonNuevaFicha.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        botonNuevaFicha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/botonNuevaFicha.png"))); // NOI18N
        botonNuevaFicha.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 0, 0), 1, true));
        botonNuevaFicha.setContentAreaFilled(false);
        botonNuevaFicha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonNuevaFichaActionPerformed(evt);
            }
        });
        panelPersonas.add(botonNuevaFicha);
        botonNuevaFicha.setBounds(0, 0, 190, 50);

        getContentPane().add(panelPersonas);
        panelPersonas.setBounds(380, 70, 190, 100);

        panelRankings.setLayout(null);

        botonListado1.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        botonListado1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/botonRankingLideres.png"))); // NOI18N
        botonListado1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 0, 0), 1, true));
        botonListado1.setContentAreaFilled(false);
        botonListado1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonListado1ActionPerformed(evt);
            }
        });
        panelRankings.add(botonListado1);
        botonListado1.setBounds(0, 0, 200, 50);

        botonListado2.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        botonListado2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/botonRankingExpertas.png"))); // NOI18N
        botonListado2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 0, 0), 1, true));
        botonListado2.setContentAreaFilled(false);
        botonListado2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonListado2ActionPerformed(evt);
            }
        });
        panelRankings.add(botonListado2);
        botonListado2.setBounds(0, 50, 200, 50);

        getContentPane().add(panelRankings);
        panelRankings.setBounds(570, 70, 200, 100);

        fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/800px-reina_amarilla.jpg"))); // NOI18N
        getContentPane().add(fondo);
        fondo.setBounds(0, 0, 840, 610);

        pestañaPersonas.setMaximumSize(new java.awt.Dimension(760, 280));
        pestañaPersonas.setPreferredSize(new java.awt.Dimension(760, 280));
        pestañaPersonas.setLayout(null);

        labelDNI.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        labelDNI.setText("DNI");
        pestañaPersonas.add(labelDNI);
        labelDNI.setBounds(20, 60, 100, 23);

        labelApellido.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        labelApellido.setText("Apellido");
        pestañaPersonas.add(labelApellido);
        labelApellido.setBounds(20, 140, 70, 26);

        labelNuevaLider.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        labelNuevaLider.setText("AGREGAR NUEVA LIDER/EXPERTA");
        pestañaPersonas.add(labelNuevaLider);
        labelNuevaLider.setBounds(170, 10, 420, 30);

        labelNombrePersona.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        labelNombrePersona.setText("Nombre");
        pestañaPersonas.add(labelNombrePersona);
        labelNombrePersona.setBounds(20, 100, 90, 23);

        labelTipoPersona.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        labelTipoPersona.setText("Tipo");
        pestañaPersonas.add(labelTipoPersona);
        labelTipoPersona.setBounds(20, 220, 50, 30);

        botonGuardarPersona.setText("Guardar");
        botonGuardarPersona.setEnabled(false);
        botonGuardarPersona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGuardarPersonaActionPerformed(evt);
            }
        });
        botonGuardarPersona.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                botonGuardarPersonaKeyReleased(evt);
            }
        });
        pestañaPersonas.add(botonGuardarPersona);
        botonGuardarPersona.setBounds(600, 240, 133, 30);

        botonCancelarPersona.setText("Cancelar");
        botonCancelarPersona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarPersonaActionPerformed(evt);
            }
        });
        pestañaPersonas.add(botonCancelarPersona);
        botonCancelarPersona.setBounds(450, 240, 133, 30);

        ingresaDNI.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ingresaDNI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ingresaDNIKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ingresaDNIKeyTyped(evt);
            }
        });
        pestañaPersonas.add(ingresaDNI);
        ingresaDNI.setBounds(120, 60, 140, 30);

        ingresaNombrePersona.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ingresaNombrePersona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresaNombrePersonaActionPerformed(evt);
            }
        });
        ingresaNombrePersona.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ingresaNombrePersonaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ingresaNombrePersonaKeyTyped(evt);
            }
        });
        pestañaPersonas.add(ingresaNombrePersona);
        ingresaNombrePersona.setBounds(120, 100, 140, 30);

        ingresaApellidoPersona.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ingresaApellidoPersona.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ingresaApellidoPersonaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ingresaApellidoPersonaKeyTyped(evt);
            }
        });
        pestañaPersonas.add(ingresaApellidoPersona);
        ingresaApellidoPersona.setBounds(120, 140, 140, 30);

        labelEstadoCivil.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        labelEstadoCivil.setText("Estado Civil");
        pestañaPersonas.add(labelEstadoCivil);
        labelEstadoCivil.setBounds(300, 180, 100, 26);

        labelFechaNac.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        labelFechaNac.setText("Fecha Nac.");
        pestañaPersonas.add(labelFechaNac);
        labelFechaNac.setBounds(20, 180, 100, 30);

        ingresaDomicilio.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ingresaDomicilio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ingresaDomicilioKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ingresaDomicilioKeyTyped(evt);
            }
        });
        pestañaPersonas.add(ingresaDomicilio);
        ingresaDomicilio.setBounds(410, 100, 130, 30);

        labelDomicilio.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        labelDomicilio.setText("Domicilio");
        pestañaPersonas.add(labelDomicilio);
        labelDomicilio.setBounds(300, 100, 80, 30);

        ingresaTelefono.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ingresaTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ingresaTelefonoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ingresaTelefonoKeyTyped(evt);
            }
        });
        pestañaPersonas.add(ingresaTelefono);
        ingresaTelefono.setBounds(410, 140, 130, 30);

        labelTelefono.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        labelTelefono.setText("Telefono");
        pestañaPersonas.add(labelTelefono);
        labelTelefono.setBounds(300, 140, 80, 30);

        jComboBoxEstCivil.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Casada", "Soltera" }));
        jComboBoxEstCivil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxEstCivilActionPerformed(evt);
            }
        });
        pestañaPersonas.add(jComboBoxEstCivil);
        jComboBoxEstCivil.setBounds(410, 180, 110, 30);

        diaNacimiento.setModel(new javax.swing.SpinnerNumberModel(1, 1, 31, 1));
        diaNacimiento.setMaximumSize(new java.awt.Dimension(39, 20));
        pestañaPersonas.add(diaNacimiento);
        diaNacimiento.setBounds(120, 180, 40, 30);

        mesNacimiento.setModel(new javax.swing.SpinnerNumberModel(1, 1, 12, 1));
        mesNacimiento.setMaximumSize(new java.awt.Dimension(39, 20));
        pestañaPersonas.add(mesNacimiento);
        mesNacimiento.setBounds(170, 180, 40, 30);

        añoNacimiento.setModel(new javax.swing.SpinnerNumberModel(1917, 1917, 2100, 1));
        añoNacimiento.setMaximumSize(new java.awt.Dimension(63, 20));
        pestañaPersonas.add(añoNacimiento);
        añoNacimiento.setBounds(220, 180, 60, 30);

        jComboBoxTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lider", "Experta" }));
        pestañaPersonas.add(jComboBoxTipo);
        jComboBoxTipo.setBounds(120, 220, 140, 30);

        ingresaLocalidad.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ingresaLocalidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ingresaLocalidadKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ingresaLocalidadKeyTyped(evt);
            }
        });
        pestañaPersonas.add(ingresaLocalidad);
        ingresaLocalidad.setBounds(410, 60, 130, 30);

        labelLocalidad.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        labelLocalidad.setText("Localidad");
        pestañaPersonas.add(labelLocalidad);
        labelLocalidad.setBounds(300, 60, 80, 30);

        labelFechaIngreso.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        labelFechaIngreso.setText("Fecha Ingreso");
        pestañaPersonas.add(labelFechaIngreso);
        labelFechaIngreso.setBounds(600, 60, 130, 30);

        diaIngreso.setModel(new javax.swing.SpinnerNumberModel(1, 1, 31, 1));
        diaIngreso.setMaximumSize(new java.awt.Dimension(39, 20));
        pestañaPersonas.add(diaIngreso);
        diaIngreso.setBounds(580, 100, 40, 30);

        mesIngreso.setModel(new javax.swing.SpinnerNumberModel(1, 1, 12, 1));
        mesIngreso.setMaximumSize(new java.awt.Dimension(39, 20));
        pestañaPersonas.add(mesIngreso);
        mesIngreso.setBounds(630, 100, 40, 30);

        añoIngreso.setModel(new javax.swing.SpinnerNumberModel(1917, 1917, 2100, 1));
        añoIngreso.setMaximumSize(new java.awt.Dimension(63, 20));
        pestañaPersonas.add(añoIngreso);
        añoIngreso.setBounds(680, 100, 60, 30);

        ingresaCodPostal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ingresaCodPostal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ingresaCodPostalKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ingresaCodPostalKeyTyped(evt);
            }
        });
        pestañaPersonas.add(ingresaCodPostal);
        ingresaCodPostal.setBounds(600, 180, 130, 30);

        labelCodPostal.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        labelCodPostal.setText("Cod. Postal");
        pestañaPersonas.add(labelCodPostal);
        labelCodPostal.setBounds(620, 140, 90, 30);

        getContentPane().add(pestañaPersonas);
        pestañaPersonas.setBounds(0, 70, 760, 570);

        pestañaNuevoProd.setMaximumSize(new java.awt.Dimension(760, 280));
        pestañaNuevoProd.setPreferredSize(new java.awt.Dimension(760, 280));
        pestañaNuevoProd.setLayout(null);

        labelIdProd.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        labelIdProd.setText("Código");
        pestañaNuevoProd.add(labelIdProd);
        labelIdProd.setBounds(20, 60, 70, 23);

        LabelPrecio.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        LabelPrecio.setText("Precio");
        pestañaNuevoProd.add(LabelPrecio);
        LabelPrecio.setBounds(20, 180, 60, 26);

        LabelLinea.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        LabelLinea.setText("Linea");
        pestañaNuevoProd.add(LabelLinea);
        LabelLinea.setBounds(20, 140, 50, 26);

        tituloNuevoProd.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        tituloNuevoProd.setText("AGREGAR NUEVO PRODUCTO");
        pestañaNuevoProd.add(tituloNuevoProd);
        tituloNuevoProd.setBounds(200, 10, 360, 30);

        LabelNombreProd.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        LabelNombreProd.setText("Nombre");
        pestañaNuevoProd.add(LabelNombreProd);
        LabelNombreProd.setBounds(20, 100, 80, 23);

        botonGuardarNP.setText("Guardar");
        botonGuardarNP.setEnabled(false);
        botonGuardarNP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGuardarNPActionPerformed(evt);
            }
        });
        botonGuardarNP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                botonGuardarNPKeyReleased(evt);
            }
        });
        pestañaNuevoProd.add(botonGuardarNP);
        botonGuardarNP.setBounds(370, 210, 133, 30);

        botonCancelarNP.setText("Cancelar");
        botonCancelarNP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarNPActionPerformed(evt);
            }
        });
        pestañaNuevoProd.add(botonCancelarNP);
        botonCancelarNP.setBounds(520, 210, 133, 30);

        ingresaCodProd.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ingresaCodProd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ingresaCodProdMouseClicked(evt);
            }
        });
        ingresaCodProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresaCodProdActionPerformed(evt);
            }
        });
        ingresaCodProd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ingresaCodProdKeyReleased(evt);
            }
        });
        pestañaNuevoProd.add(ingresaCodProd);
        ingresaCodProd.setBounds(110, 60, 200, 30);

        ingresaNombreProd.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ingresaNombreProd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ingresaNombreProdMouseClicked(evt);
            }
        });
        ingresaNombreProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresaNombreProdActionPerformed(evt);
            }
        });
        ingresaNombreProd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ingresaNombreProdKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ingresaNombreProdKeyTyped(evt);
            }
        });
        pestañaNuevoProd.add(ingresaNombreProd);
        ingresaNombreProd.setBounds(110, 100, 200, 30);

        ingresaLinea.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ingresaLinea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ingresaLineaMouseClicked(evt);
            }
        });
        ingresaLinea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ingresaLineaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ingresaLineaKeyTyped(evt);
            }
        });
        pestañaNuevoProd.add(ingresaLinea);
        ingresaLinea.setBounds(110, 140, 200, 30);

        ingresaPrecio.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ingresaPrecio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ingresaPrecioMouseClicked(evt);
            }
        });
        ingresaPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ingresaPrecioKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ingresaPrecioKeyTyped(evt);
            }
        });
        pestañaNuevoProd.add(ingresaPrecio);
        ingresaPrecio.setBounds(110, 180, 200, 30);

        labelCantidad.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        labelCantidad.setText("Cantidad");
        pestañaNuevoProd.add(labelCantidad);
        labelCantidad.setBounds(20, 220, 90, 26);

        labelNeto.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        labelNeto.setText("Neto");
        pestañaNuevoProd.add(labelNeto);
        labelNeto.setBounds(470, 120, 50, 30);

        ingresaCantidad.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ingresaCantidad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ingresaCantidadMouseClicked(evt);
            }
        });
        ingresaCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ingresaCantidadKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ingresaCantidadKeyTyped(evt);
            }
        });
        pestañaNuevoProd.add(ingresaCantidad);
        ingresaCantidad.setBounds(110, 220, 200, 30);

        jComboBoxNeto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Si", "No" }));
        pestañaNuevoProd.add(jComboBoxNeto);
        jComboBoxNeto.setBounds(530, 120, 50, 30);

        LabelCodNoDisp.setForeground(new java.awt.Color(255, 0, 0));
        LabelCodNoDisp.setText("No disponible");
        pestañaNuevoProd.add(LabelCodNoDisp);
        LabelCodNoDisp.setBounds(320, 60, 110, 30);

        getContentPane().add(pestañaNuevoProd);
        pestañaNuevoProd.setBounds(0, 70, 760, 570);

        pestañaVenta.setMaximumSize(new java.awt.Dimension(760, 570));
        pestañaVenta.setPreferredSize(new java.awt.Dimension(760, 570));
        pestañaVenta.setLayout(null);

        labelDNI2.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        labelDNI2.setText("DNI");
        pestañaVenta.add(labelDNI2);
        labelDNI2.setBounds(20, 60, 100, 23);

        labelApellido2.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        labelApellido2.setText("Apellido");
        pestañaVenta.add(labelApellido2);
        labelApellido2.setBounds(380, 60, 70, 26);

        labelNuevaLider2.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        labelNuevaLider2.setText("REALIZAR VENTA");
        pestañaVenta.add(labelNuevaLider2);
        labelNuevaLider2.setBounds(260, 10, 220, 30);

        labelNombrePersona2.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        labelNombrePersona2.setText("Nombre");
        pestañaVenta.add(labelNombrePersona2);
        labelNombrePersona2.setBounds(20, 100, 90, 23);

        labelTipoPersona2.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        labelTipoPersona2.setText("Tipo");
        pestañaVenta.add(labelTipoPersona2);
        labelTipoPersona2.setBounds(380, 100, 50, 30);

        botonRealizarVenta.setText("Realizar Venta");
        botonRealizarVenta.setEnabled(false);
        botonRealizarVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRealizarVentaActionPerformed(evt);
            }
        });
        botonRealizarVenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                botonRealizarVentaKeyReleased(evt);
            }
        });
        pestañaVenta.add(botonRealizarVenta);
        botonRealizarVenta.setBounds(610, 290, 133, 40);

        botonCancelarVenta.setText("Cancelar");
        botonCancelarVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarVentaActionPerformed(evt);
            }
        });
        pestañaVenta.add(botonCancelarVenta);
        botonCancelarVenta.setBounds(610, 340, 133, 40);

        ingresaDniVenta.setEditable(false);
        ingresaDniVenta.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ingresaDniVenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ingresaDniVentaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ingresaDniVentaKeyTyped(evt);
            }
        });
        pestañaVenta.add(ingresaDniVenta);
        ingresaDniVenta.setBounds(120, 60, 140, 30);

        ingresaNombreVenta.setEditable(false);
        ingresaNombreVenta.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ingresaNombreVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresaNombreVentaActionPerformed(evt);
            }
        });
        ingresaNombreVenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ingresaNombreVentaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ingresaNombreVentaKeyTyped(evt);
            }
        });
        pestañaVenta.add(ingresaNombreVenta);
        ingresaNombreVenta.setBounds(120, 100, 140, 30);

        ingresaApellidoVenta.setEditable(false);
        ingresaApellidoVenta.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ingresaApellidoVenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ingresaApellidoVentaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ingresaApellidoVentaKeyTyped(evt);
            }
        });
        pestañaVenta.add(ingresaApellidoVenta);
        ingresaApellidoVenta.setBounds(480, 60, 160, 30);

        jComboBoxTipo2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lider", "Experta" }));
        jComboBoxTipo2.setEnabled(false);
        pestañaVenta.add(jComboBoxTipo2);
        jComboBoxTipo2.setBounds(480, 100, 160, 30);

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre", "Cantidad", "Neto", "Precio", "Precio Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable4.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jTable4ComponentAdded(evt);
            }
        });
        jTable4.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTable4AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane4.setViewportView(jTable4);

        pestañaVenta.add(jScrollPane4);
        jScrollPane4.setBounds(20, 140, 580, 240);

        botonEliminarProductoDeVenta.setText("Eliminar producto");
        botonEliminarProductoDeVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarProductoDeVentaActionPerformed(evt);
            }
        });
        pestañaVenta.add(botonEliminarProductoDeVenta);
        botonEliminarProductoDeVenta.setBounds(620, 190, 120, 40);

        botonAgregarProductoAVenta.setText("Agregar producto");
        botonAgregarProductoAVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarProductoAVentaActionPerformed(evt);
            }
        });
        pestañaVenta.add(botonAgregarProductoAVenta);
        botonAgregarProductoAVenta.setBounds(620, 140, 120, 40);

        jLabel4.setText("Total:");
        pestañaVenta.add(jLabel4);
        jLabel4.setBounds(450, 400, 40, 20);

        totalVenta.setEditable(false);
        totalVenta.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        pestañaVenta.add(totalVenta);
        totalVenta.setBounds(500, 400, 100, 20);

        jLabel5.setText("Subtotal:");
        pestañaVenta.add(jLabel5);
        jLabel5.setBounds(30, 400, 50, 20);

        subtotalVenta.setEditable(false);
        subtotalVenta.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        pestañaVenta.add(subtotalVenta);
        subtotalVenta.setBounds(90, 400, 100, 20);

        jLabel6.setText("Descuento:");
        pestañaVenta.add(jLabel6);
        jLabel6.setBounds(250, 400, 80, 20);

        descuentoVenta.setEditable(false);
        descuentoVenta.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pestañaVenta.add(descuentoVenta);
        descuentoVenta.setBounds(340, 400, 70, 20);

        buscarFichaVenta.setText("Buscar");
        buscarFichaVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarFichaVentaActionPerformed(evt);
            }
        });
        pestañaVenta.add(buscarFichaVenta);
        buscarFichaVenta.setBounds(270, 60, 90, 30);

        getContentPane().add(pestañaVenta);
        pestañaVenta.setBounds(0, 70, 760, 570);

        pestañaVerListado.setMaximumSize(new java.awt.Dimension(760, 280));
        pestañaVerListado.setPreferredSize(new java.awt.Dimension(760, 280));
        pestañaVerListado.setLayout(null);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre", "Linea", "Cantidad", "Precio Venta", "esNeto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        pestañaVerListado.add(jScrollPane1);
        jScrollPane1.setBounds(10, 120, 750, 330);

        tituloListadoProd.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        tituloListadoProd.setText("LISTADO DE PRODUCTOS");
        pestañaVerListado.add(tituloListadoProd);
        tituloListadoProd.setBounds(220, 10, 360, 30);

        ingresaFiltroProd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ingresaFiltroProdMouseClicked(evt);
            }
        });
        ingresaFiltroProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresaFiltroProdActionPerformed(evt);
            }
        });
        ingresaFiltroProd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ingresaFiltroProdKeyReleased(evt);
            }
        });
        pestañaVerListado.add(ingresaFiltroProd);
        ingresaFiltroProd.setBounds(330, 40, 130, 30);

        jLabel1.setText("Buscar:");
        pestañaVerListado.add(jLabel1);
        jLabel1.setBounds(260, 40, 70, 30);

        cerrarListado.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cerrarListado.setText("X");
        cerrarListado.setBorderPainted(false);
        cerrarListado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarListadoActionPerformed(evt);
            }
        });
        pestañaVerListado.add(cerrarListado);
        cerrarListado.setBounds(690, 10, 50, 30);

        botonEliminarProd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/eliminar.png"))); // NOI18N
        botonEliminarProd.setBorderPainted(false);
        botonEliminarProd.setContentAreaFilled(false);
        botonEliminarProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarProdActionPerformed(evt);
            }
        });
        pestañaVerListado.add(botonEliminarProd);
        botonEliminarProd.setBounds(690, 70, 60, 40);

        botonEditarProd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/editar.png"))); // NOI18N
        botonEditarProd.setBorderPainted(false);
        botonEditarProd.setContentAreaFilled(false);
        botonEditarProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEditarProdActionPerformed(evt);
            }
        });
        pestañaVerListado.add(botonEditarProd);
        botonEditarProd.setBounds(630, 70, 60, 40);

        getContentPane().add(pestañaVerListado);
        pestañaVerListado.setBounds(0, 70, 760, 570);

        pestañaStockMinimo.setMaximumSize(new java.awt.Dimension(760, 280));
        pestañaStockMinimo.setPreferredSize(new java.awt.Dimension(760, 280));
        pestañaStockMinimo.setLayout(null);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre", "Linea", "Cantidad", "Precio Venta", "esNeto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        pestañaStockMinimo.add(jScrollPane2);
        jScrollPane2.setBounds(30, 120, 700, 140);

        tituloListadoProd1.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        tituloListadoProd1.setText("LISTADO DE PRODUCTOS");
        pestañaStockMinimo.add(tituloListadoProd1);
        tituloListadoProd1.setBounds(220, 10, 360, 30);

        ingresaFiltroProd1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ingresaFiltroProd1MouseClicked(evt);
            }
        });
        ingresaFiltroProd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresaFiltroProd1ActionPerformed(evt);
            }
        });
        ingresaFiltroProd1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ingresaFiltroProd1KeyReleased(evt);
            }
        });
        pestañaStockMinimo.add(ingresaFiltroProd1);
        ingresaFiltroProd1.setBounds(330, 40, 130, 30);

        jLabel2.setText("Buscar:");
        pestañaStockMinimo.add(jLabel2);
        jLabel2.setBounds(260, 40, 70, 30);

        cerrarStockMinimo.setText("X");
        cerrarStockMinimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarStockMinimoActionPerformed(evt);
            }
        });
        pestañaStockMinimo.add(cerrarStockMinimo);
        cerrarStockMinimo.setBounds(700, 10, 50, 30);

        getContentPane().add(pestañaStockMinimo);
        pestañaStockMinimo.setBounds(0, 70, 760, 570);

        pestañaEditarProducto.setMaximumSize(new java.awt.Dimension(760, 280));
        pestañaEditarProducto.setPreferredSize(new java.awt.Dimension(760, 280));
        pestañaEditarProducto.setLayout(null);

        labelIdProd1.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        labelIdProd1.setText("Código");
        pestañaEditarProducto.add(labelIdProd1);
        labelIdProd1.setBounds(20, 60, 70, 23);

        LabelPrecio1.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        LabelPrecio1.setText("Precio");
        pestañaEditarProducto.add(LabelPrecio1);
        LabelPrecio1.setBounds(20, 180, 60, 26);

        LabelLinea1.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        LabelLinea1.setText("Linea");
        pestañaEditarProducto.add(LabelLinea1);
        LabelLinea1.setBounds(20, 140, 50, 26);

        tituloEditarProducto.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        tituloEditarProducto.setText("EDITAR PRODUCTO");
        pestañaEditarProducto.add(tituloEditarProducto);
        tituloEditarProducto.setBounds(230, 10, 250, 30);

        LabelNombreProd1.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        LabelNombreProd1.setText("Nombre");
        pestañaEditarProducto.add(LabelNombreProd1);
        LabelNombreProd1.setBounds(20, 100, 80, 23);

        botonGuardarCambiosProd.setText("Guardar");
        botonGuardarCambiosProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGuardarCambiosProdActionPerformed(evt);
            }
        });
        botonGuardarCambiosProd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                botonGuardarCambiosProdKeyReleased(evt);
            }
        });
        pestañaEditarProducto.add(botonGuardarCambiosProd);
        botonGuardarCambiosProd.setBounds(370, 210, 133, 30);

        botonCancelarEditarProd.setText("Cancelar");
        botonCancelarEditarProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarEditarProdActionPerformed(evt);
            }
        });
        pestañaEditarProducto.add(botonCancelarEditarProd);
        botonCancelarEditarProd.setBounds(520, 210, 133, 30);

        ingresaCodProd1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ingresaCodProd1.setEnabled(false);
        ingresaCodProd1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ingresaCodProd1MouseClicked(evt);
            }
        });
        ingresaCodProd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresaCodProd1ActionPerformed(evt);
            }
        });
        ingresaCodProd1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ingresaCodProd1KeyReleased(evt);
            }
        });
        pestañaEditarProducto.add(ingresaCodProd1);
        ingresaCodProd1.setBounds(110, 60, 200, 30);

        ingresaNombreProd1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ingresaNombreProd1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ingresaNombreProd1MouseClicked(evt);
            }
        });
        ingresaNombreProd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresaNombreProd1ActionPerformed(evt);
            }
        });
        ingresaNombreProd1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ingresaNombreProd1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ingresaNombreProd1KeyTyped(evt);
            }
        });
        pestañaEditarProducto.add(ingresaNombreProd1);
        ingresaNombreProd1.setBounds(110, 100, 200, 30);

        ingresaLinea1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ingresaLinea1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ingresaLinea1MouseClicked(evt);
            }
        });
        ingresaLinea1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ingresaLinea1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ingresaLinea1KeyTyped(evt);
            }
        });
        pestañaEditarProducto.add(ingresaLinea1);
        ingresaLinea1.setBounds(110, 140, 200, 30);

        ingresaPrecio1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ingresaPrecio1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ingresaPrecio1MouseClicked(evt);
            }
        });
        ingresaPrecio1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ingresaPrecio1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ingresaPrecio1KeyTyped(evt);
            }
        });
        pestañaEditarProducto.add(ingresaPrecio1);
        ingresaPrecio1.setBounds(110, 180, 200, 30);

        labelCantidad1.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        labelCantidad1.setText("Cantidad");
        pestañaEditarProducto.add(labelCantidad1);
        labelCantidad1.setBounds(20, 220, 90, 26);

        labelNeto1.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        labelNeto1.setText("Neto");
        pestañaEditarProducto.add(labelNeto1);
        labelNeto1.setBounds(470, 120, 50, 30);

        ingresaCantidad1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ingresaCantidad1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ingresaCantidad1MouseClicked(evt);
            }
        });
        ingresaCantidad1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ingresaCantidad1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ingresaCantidad1KeyTyped(evt);
            }
        });
        pestañaEditarProducto.add(ingresaCantidad1);
        ingresaCantidad1.setBounds(110, 220, 200, 30);

        jComboBoxNeto1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Si", "No" }));
        pestañaEditarProducto.add(jComboBoxNeto1);
        jComboBoxNeto1.setBounds(530, 120, 50, 30);

        getContentPane().add(pestañaEditarProducto);
        pestañaEditarProducto.setBounds(0, 70, 760, 570);

        pestañaVerFichas.setMaximumSize(new java.awt.Dimension(760, 280));
        pestañaVerFichas.setPreferredSize(new java.awt.Dimension(760, 280));
        pestañaVerFichas.setLayout(null);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DNI", "Nombre", "Apellido", "Nacimiento", "Fecha Ingreso", "Categoria", "Localidad", "Domicilio", "Telefono", "E. Civil", "C. Postal"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable3.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(jTable3);

        pestañaVerFichas.add(jScrollPane3);
        jScrollPane3.setBounds(10, 120, 750, 290);

        tituloListadoFichas.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        tituloListadoFichas.setText("LISTADO DE FICHAS");
        pestañaVerFichas.add(tituloListadoFichas);
        tituloListadoFichas.setBounds(260, 0, 360, 30);

        ingresaFiltroFicha.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ingresaFiltroFichaMouseClicked(evt);
            }
        });
        ingresaFiltroFicha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresaFiltroFichaActionPerformed(evt);
            }
        });
        ingresaFiltroFicha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ingresaFiltroFichaKeyReleased(evt);
            }
        });
        pestañaVerFichas.add(ingresaFiltroFicha);
        ingresaFiltroFicha.setBounds(330, 40, 130, 30);

        jLabel3.setText("Buscar:");
        pestañaVerFichas.add(jLabel3);
        jLabel3.setBounds(260, 40, 70, 30);

        cerrarListado1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cerrarListado1.setText("X");
        cerrarListado1.setBorderPainted(false);
        cerrarListado1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarListado1ActionPerformed(evt);
            }
        });
        pestañaVerFichas.add(cerrarListado1);
        cerrarListado1.setBounds(690, 10, 50, 30);

        botonEliminarFicha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/eliminar.png"))); // NOI18N
        botonEliminarFicha.setBorderPainted(false);
        botonEliminarFicha.setContentAreaFilled(false);
        botonEliminarFicha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarFichaActionPerformed(evt);
            }
        });
        pestañaVerFichas.add(botonEliminarFicha);
        botonEliminarFicha.setBounds(690, 70, 60, 40);

        botonEditarFicha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/editar.png"))); // NOI18N
        botonEditarFicha.setBorderPainted(false);
        botonEditarFicha.setContentAreaFilled(false);
        botonEditarFicha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEditarFichaActionPerformed(evt);
            }
        });
        pestañaVerFichas.add(botonEditarFicha);
        botonEditarFicha.setBounds(630, 70, 60, 40);

        getContentPane().add(pestañaVerFichas);
        pestañaVerFichas.setBounds(0, 70, 760, 570);

        pestañaEditarPersona.setMaximumSize(new java.awt.Dimension(760, 280));
        pestañaEditarPersona.setPreferredSize(new java.awt.Dimension(760, 280));
        pestañaEditarPersona.setLayout(null);

        labelDNI1.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        labelDNI1.setText("DNI");
        pestañaEditarPersona.add(labelDNI1);
        labelDNI1.setBounds(20, 60, 100, 23);

        labelApellido1.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        labelApellido1.setText("Apellido");
        pestañaEditarPersona.add(labelApellido1);
        labelApellido1.setBounds(20, 140, 70, 26);

        labelNuevaLider1.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        labelNuevaLider1.setText("EDITAR LIDER/EXPERTA");
        pestañaEditarPersona.add(labelNuevaLider1);
        labelNuevaLider1.setBounds(260, 10, 420, 30);

        labelNombrePersona1.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        labelNombrePersona1.setText("Nombre");
        pestañaEditarPersona.add(labelNombrePersona1);
        labelNombrePersona1.setBounds(20, 100, 90, 23);

        labelTipoPersona1.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        labelTipoPersona1.setText("Tipo");
        pestañaEditarPersona.add(labelTipoPersona1);
        labelTipoPersona1.setBounds(20, 220, 50, 30);

        botonGuardarPersona1.setText("Guardar");
        botonGuardarPersona1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGuardarPersona1ActionPerformed(evt);
            }
        });
        botonGuardarPersona1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                botonGuardarPersona1KeyReleased(evt);
            }
        });
        pestañaEditarPersona.add(botonGuardarPersona1);
        botonGuardarPersona1.setBounds(600, 240, 133, 30);

        botonCancelarPersona1.setText("Cancelar");
        botonCancelarPersona1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarPersona1ActionPerformed(evt);
            }
        });
        pestañaEditarPersona.add(botonCancelarPersona1);
        botonCancelarPersona1.setBounds(450, 240, 133, 30);

        ingresaDNI1.setEditable(false);
        ingresaDNI1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ingresaDNI1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ingresaDNI1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ingresaDNI1KeyTyped(evt);
            }
        });
        pestañaEditarPersona.add(ingresaDNI1);
        ingresaDNI1.setBounds(120, 60, 140, 30);

        ingresaNombrePersona1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ingresaNombrePersona1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresaNombrePersona1ActionPerformed(evt);
            }
        });
        ingresaNombrePersona1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ingresaNombrePersona1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ingresaNombrePersona1KeyTyped(evt);
            }
        });
        pestañaEditarPersona.add(ingresaNombrePersona1);
        ingresaNombrePersona1.setBounds(120, 100, 140, 30);

        ingresaApellidoPersona1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ingresaApellidoPersona1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ingresaApellidoPersona1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ingresaApellidoPersona1KeyTyped(evt);
            }
        });
        pestañaEditarPersona.add(ingresaApellidoPersona1);
        ingresaApellidoPersona1.setBounds(120, 140, 140, 30);

        labelEstadoCivil1.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        labelEstadoCivil1.setText("Estado Civil");
        pestañaEditarPersona.add(labelEstadoCivil1);
        labelEstadoCivil1.setBounds(300, 180, 100, 26);

        labelFechaNac1.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        labelFechaNac1.setText("Fecha Nac.");
        pestañaEditarPersona.add(labelFechaNac1);
        labelFechaNac1.setBounds(20, 180, 100, 30);

        ingresaDomicilio1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ingresaDomicilio1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ingresaDomicilio1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ingresaDomicilio1KeyTyped(evt);
            }
        });
        pestañaEditarPersona.add(ingresaDomicilio1);
        ingresaDomicilio1.setBounds(410, 100, 130, 30);

        labelDomicilio1.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        labelDomicilio1.setText("Domicilio");
        pestañaEditarPersona.add(labelDomicilio1);
        labelDomicilio1.setBounds(300, 100, 80, 30);

        ingresaTelefono1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ingresaTelefono1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ingresaTelefono1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ingresaTelefono1KeyTyped(evt);
            }
        });
        pestañaEditarPersona.add(ingresaTelefono1);
        ingresaTelefono1.setBounds(410, 140, 130, 30);

        labelTelefono1.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        labelTelefono1.setText("Telefono");
        pestañaEditarPersona.add(labelTelefono1);
        labelTelefono1.setBounds(300, 140, 80, 30);

        jComboBoxEstCivil1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Casada", "Soltera" }));
        jComboBoxEstCivil1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxEstCivil1ActionPerformed(evt);
            }
        });
        pestañaEditarPersona.add(jComboBoxEstCivil1);
        jComboBoxEstCivil1.setBounds(410, 180, 110, 30);

        diaNacimiento1.setModel(new javax.swing.SpinnerNumberModel(1, 1, 31, 1));
        diaNacimiento1.setMaximumSize(new java.awt.Dimension(39, 20));
        pestañaEditarPersona.add(diaNacimiento1);
        diaNacimiento1.setBounds(120, 180, 40, 30);

        mesNacimiento1.setModel(new javax.swing.SpinnerNumberModel(1, 1, 12, 1));
        mesNacimiento1.setMaximumSize(new java.awt.Dimension(39, 20));
        pestañaEditarPersona.add(mesNacimiento1);
        mesNacimiento1.setBounds(170, 180, 40, 30);

        añoNacimiento1.setModel(new javax.swing.SpinnerNumberModel(1917, 1917, 2100, 1));
        añoNacimiento1.setMaximumSize(new java.awt.Dimension(63, 20));
        pestañaEditarPersona.add(añoNacimiento1);
        añoNacimiento1.setBounds(220, 180, 60, 30);

        jComboBoxTipo1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lider", "Experta" }));
        pestañaEditarPersona.add(jComboBoxTipo1);
        jComboBoxTipo1.setBounds(120, 220, 140, 30);

        ingresaLocalidad1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ingresaLocalidad1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ingresaLocalidad1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ingresaLocalidad1KeyTyped(evt);
            }
        });
        pestañaEditarPersona.add(ingresaLocalidad1);
        ingresaLocalidad1.setBounds(410, 60, 130, 30);

        labelLocalidad1.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        labelLocalidad1.setText("Localidad");
        pestañaEditarPersona.add(labelLocalidad1);
        labelLocalidad1.setBounds(300, 60, 80, 30);

        labelFechaIngreso1.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        labelFechaIngreso1.setText("Fecha Ingreso");
        pestañaEditarPersona.add(labelFechaIngreso1);
        labelFechaIngreso1.setBounds(600, 60, 130, 30);

        diaIngreso1.setModel(new javax.swing.SpinnerNumberModel(1, 1, 31, 1));
        diaIngreso1.setMaximumSize(new java.awt.Dimension(39, 20));
        pestañaEditarPersona.add(diaIngreso1);
        diaIngreso1.setBounds(580, 100, 40, 30);

        mesIngreso1.setModel(new javax.swing.SpinnerNumberModel(1, 1, 12, 1));
        mesIngreso1.setMaximumSize(new java.awt.Dimension(39, 20));
        pestañaEditarPersona.add(mesIngreso1);
        mesIngreso1.setBounds(630, 100, 40, 30);

        añoIngreso1.setModel(new javax.swing.SpinnerNumberModel(1917, 1917, 2100, 1));
        añoIngreso1.setMaximumSize(new java.awt.Dimension(63, 20));
        pestañaEditarPersona.add(añoIngreso1);
        añoIngreso1.setBounds(680, 100, 60, 30);

        ingresaCodPostal1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ingresaCodPostal1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ingresaCodPostal1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ingresaCodPostal1KeyTyped(evt);
            }
        });
        pestañaEditarPersona.add(ingresaCodPostal1);
        ingresaCodPostal1.setBounds(600, 180, 130, 30);

        labelCodPostal1.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        labelCodPostal1.setText("Cod. Postal");
        pestañaEditarPersona.add(labelCodPostal1);
        labelCodPostal1.setBounds(620, 140, 90, 30);

        getContentPane().add(pestañaEditarPersona);
        pestañaEditarPersona.setBounds(0, 70, 760, 570);

        pestañaFichasParaVenta.setMaximumSize(new java.awt.Dimension(760, 280));
        pestañaFichasParaVenta.setPreferredSize(new java.awt.Dimension(760, 280));
        pestañaFichasParaVenta.setLayout(null);

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DNI", "Nombre", "Apellido", "Nacimiento", "Fecha Ingreso", "Categoria", "Localidad", "Domicilio", "Telefono", "E. Civil", "C. Postal"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable5.getTableHeader().setReorderingAllowed(false);
        jScrollPane5.setViewportView(jTable5);

        pestañaFichasParaVenta.add(jScrollPane5);
        jScrollPane5.setBounds(10, 80, 750, 290);

        tituloListadoFichas1.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        tituloListadoFichas1.setText("LISTADO DE FICHAS");
        pestañaFichasParaVenta.add(tituloListadoFichas1);
        tituloListadoFichas1.setBounds(260, 0, 360, 30);

        ingresaFiltroFicha1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ingresaFiltroFicha1MouseClicked(evt);
            }
        });
        ingresaFiltroFicha1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresaFiltroFicha1ActionPerformed(evt);
            }
        });
        ingresaFiltroFicha1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ingresaFiltroFicha1KeyReleased(evt);
            }
        });
        pestañaFichasParaVenta.add(ingresaFiltroFicha1);
        ingresaFiltroFicha1.setBounds(330, 40, 130, 30);

        jLabel7.setText("Buscar:");
        pestañaFichasParaVenta.add(jLabel7);
        jLabel7.setBounds(260, 40, 70, 30);

        seleccionarFichaVenta.setText("Seleccionar");
        seleccionarFichaVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionarFichaVentaActionPerformed(evt);
            }
        });
        pestañaFichasParaVenta.add(seleccionarFichaVenta);
        seleccionarFichaVenta.setBounds(630, 380, 130, 30);

        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        pestañaFichasParaVenta.add(jButton2);
        jButton2.setBounds(480, 380, 140, 30);

        getContentPane().add(pestañaFichasParaVenta);
        pestañaFichasParaVenta.setBounds(0, 70, 760, 570);

        pestañaSeleccionarProductoVenta.setMaximumSize(new java.awt.Dimension(760, 280));
        pestañaSeleccionarProductoVenta.setPreferredSize(new java.awt.Dimension(760, 280));
        pestañaSeleccionarProductoVenta.setLayout(null);

        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre", "Linea", "Cantidad", "Precio Venta", "esNeto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable6.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable6.getTableHeader().setReorderingAllowed(false);
        jScrollPane6.setViewportView(jTable6);

        pestañaSeleccionarProductoVenta.add(jScrollPane6);
        jScrollPane6.setBounds(10, 120, 750, 270);

        tituloListadoProd2.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        tituloListadoProd2.setText("LISTADO DE PRODUCTOS");
        pestañaSeleccionarProductoVenta.add(tituloListadoProd2);
        tituloListadoProd2.setBounds(220, 10, 360, 30);

        ingresaFiltroProd2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ingresaFiltroProd2MouseClicked(evt);
            }
        });
        ingresaFiltroProd2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresaFiltroProd2ActionPerformed(evt);
            }
        });
        ingresaFiltroProd2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ingresaFiltroProd2KeyReleased(evt);
            }
        });
        pestañaSeleccionarProductoVenta.add(ingresaFiltroProd2);
        ingresaFiltroProd2.setBounds(330, 40, 130, 30);

        jLabel8.setText("Buscar:");
        pestañaSeleccionarProductoVenta.add(jLabel8);
        jLabel8.setBounds(260, 40, 70, 30);

        seleccionarFichaVenta1.setText("Seleccionar");
        seleccionarFichaVenta1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionarFichaVenta1ActionPerformed(evt);
            }
        });
        pestañaSeleccionarProductoVenta.add(seleccionarFichaVenta1);
        seleccionarFichaVenta1.setBounds(610, 400, 150, 30);

        jButton3.setText("Cancelar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        pestañaSeleccionarProductoVenta.add(jButton3);
        jButton3.setBounds(450, 400, 150, 30);

        jSpinner1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jSpinner1PropertyChange(evt);
            }
        });
        pestañaSeleccionarProductoVenta.add(jSpinner1);
        jSpinner1.setBounds(720, 70, 40, 30);

        getContentPane().add(pestañaSeleccionarProductoVenta);
        pestañaSeleccionarProductoVenta.setBounds(0, 70, 760, 570);

        pestañaRankingLider.setMaximumSize(new java.awt.Dimension(760, 280));
        pestañaRankingLider.setPreferredSize(new java.awt.Dimension(760, 280));
        pestañaRankingLider.setLayout(null);

        jTable7.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DNI", "Nombre", "Apellido", "Nacimiento", "Fecha Ingreso", "Categoria", "Localidad", "Domicilio", "Telefono", "E. Civil", "C. Postal"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable7.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable7.getTableHeader().setReorderingAllowed(false);
        jScrollPane7.setViewportView(jTable7);

        pestañaRankingLider.add(jScrollPane7);
        jScrollPane7.setBounds(10, 120, 750, 290);

        tituloListadoFichas2.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        tituloListadoFichas2.setText("RANKING LIDERES");
        pestañaRankingLider.add(tituloListadoFichas2);
        tituloListadoFichas2.setBounds(290, 0, 360, 30);

        cerrarListado2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cerrarListado2.setText("X");
        cerrarListado2.setBorderPainted(false);
        cerrarListado2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarListado2ActionPerformed(evt);
            }
        });
        pestañaRankingLider.add(cerrarListado2);
        cerrarListado2.setBounds(690, 10, 50, 30);

        jComboBoxTipo3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Por P.V.P", "Por cantidad" }));
        jComboBoxTipo3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxTipo3ActionPerformed(evt);
            }
        });
        pestañaRankingLider.add(jComboBoxTipo3);
        jComboBoxTipo3.setBounds(330, 60, 160, 30);

        getContentPane().add(pestañaRankingLider);
        pestañaRankingLider.setBounds(0, 70, 760, 570);

        pestañaRankingExpertas.setMaximumSize(new java.awt.Dimension(760, 280));
        pestañaRankingExpertas.setPreferredSize(new java.awt.Dimension(760, 280));
        pestañaRankingExpertas.setLayout(null);

        jTable9.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DNI", "Nombre", "Apellido", "Nacimiento", "Fecha Ingreso", "Categoria", "Localidad", "Domicilio", "Telefono", "E. Civil", "C. Postal"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable9.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable9.getTableHeader().setReorderingAllowed(false);
        jScrollPane9.setViewportView(jTable9);

        pestañaRankingExpertas.add(jScrollPane9);
        jScrollPane9.setBounds(10, 120, 750, 290);

        tituloListadoFichas4.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        tituloListadoFichas4.setText("RANKING EXPERTAS");
        pestañaRankingExpertas.add(tituloListadoFichas4);
        tituloListadoFichas4.setBounds(290, 0, 360, 30);

        cerrarListado4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cerrarListado4.setText("X");
        cerrarListado4.setBorderPainted(false);
        cerrarListado4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarListado4ActionPerformed(evt);
            }
        });
        pestañaRankingExpertas.add(cerrarListado4);
        cerrarListado4.setBounds(690, 10, 50, 30);

        jComboBoxTipo4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Por P.V.P", "Por cantidad" }));
        jComboBoxTipo4.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxTipo4ItemStateChanged(evt);
            }
        });
        jComboBoxTipo4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxTipo4ActionPerformed(evt);
            }
        });
        pestañaRankingExpertas.add(jComboBoxTipo4);
        jComboBoxTipo4.setBounds(330, 60, 160, 30);

        getContentPane().add(pestañaRankingExpertas);
        pestañaRankingExpertas.setBounds(0, 70, 760, 570);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private boolean noExiste(String text) {

        List<Producto> productos;
         Session session = NewHibernateUtil.getSessionFactory().openSession();
         session.beginTransaction(); 
         Query q=session.createQuery("from Producto where codigoprod = "+Integer.parseInt(text)+"");
         productos= new ArrayList<Producto>(q.list());
         session.getTransaction().commit();
         session.close();
         return productos.isEmpty();
    }
    
    private void reiniciarValores(){
        
        //VENTANA VENTA
        precioTotalVenta=0d;
        precioSubtotalVenta=0d;
        totalVenta.setText(precioTotalVenta.toString());
        subtotalVenta.setText(precioSubtotalVenta.toString());
        descuentoVenta.setText("");
        ingresaDniVenta.setText("");
        ingresaNombreVenta.setText("");
        ingresaApellidoVenta.setText("");
        
        //VENTANA NUEVO PRODUCTO
        ingresaLinea.setText("");
        ingresaPrecio.setText("");
        ingresaNombreProd.setText("");   
        botonGuardarNP.setEnabled(false);
        ingresaCodProd.setText("");
        ingresaCantidad.setText("");
        
        //VENTANA NUEVA FICHA
        ingresaDNI.setText("");
        ingresaNombrePersona.setText("");
        ingresaApellidoPersona.setText("");
        ingresaLocalidad.setText("");
        ingresaCodPostal.setText("");
        ingresaDomicilio.setText("");
        ingresaTelefono.setText("");
        
        //VENTANA VER LISTADO PRODUCTOS
        ingresaFiltroProd.setText("");
        
        //VENTANA EDITAR PRODUCTO
        
        ingresaCodProd1.setText("");
        ingresaLinea1.setText("");
        ingresaPrecio1.setText("");
        ingresaNombreProd1.setText("");
        ingresaCantidad1.setText("");
        
        //VENTANA VER LISTADO STOCK MINIMO
        ingresaFiltroProd1.setText("");
        
        //VENTANA VER FICHAS
        ingresaFiltroFicha.setText("");
    }
    
    
    private boolean hayPestañasAbiertas(){
        if((panelCaja.isVisible())||(panelProductos.isVisible())||(panelPersonas.isVisible())||(panelRankings.isVisible()))
            return true;
        else
            return false;
    }
    private void cerrarPaneles(){
        panelCaja.setVisible(false);
        panelProductos.setVisible(false);
        panelPersonas.setVisible(false);
        panelRankings.setVisible(false);
    }
    
    private void cerrarPestañas(){
        pestañaVerListado.setVisible(false);
        pestañaVerFichas.setVisible(false);
        pestañaNuevoProd.setVisible(false);
        pestañaPersonas.setVisible(false);
        pestañaStockMinimo.setVisible(false);
        pestañaEditarProducto.setVisible(false);
        pestañaEditarPersona.setVisible(false);
        pestañaVenta.setVisible(false);
        pestañaFichasParaVenta.setVisible(false);
        pestañaSeleccionarProductoVenta.setVisible(false);
        pestañaRankingExpertas.setVisible(false);
        pestañaRankingLider.setVisible(false);
    }
    
    private boolean camposProductoCompletos(){
        if ((ingresaLinea.getText().length()!=0)&&(ingresaNombreProd.getText().length()!=0)
            &&(ingresaPrecio.getText().length()!=0) &&(ingresaCodProd.getText().length()!=0)
            &&(ingresaCantidad.getText().length()!=0))
            return true;
        else 
            return false;
    }
     private boolean camposProductoCompletos1(){
        if ((ingresaLinea1.getText().length()!=0)&&(ingresaNombreProd1.getText().length()!=0)
            &&(ingresaPrecio1.getText().length()!=0) &&(ingresaCodProd1.getText().length()!=0)
            &&(ingresaCantidad1.getText().length()!=0))
            return true;
        else 
            return false;
    }

    private boolean camposFichaCompletos(){
        if ((ingresaDNI.getText().length()!=0)&&(ingresaNombrePersona.getText().length()!=0)
            &&(ingresaApellidoPersona.getText().length()!=0) &&(ingresaLocalidad.getText().length()!=0)
            &&(ingresaDomicilio.getText().length()!=0)&&(ingresaTelefono.getText().length()!=0)
            &&(ingresaCodPostal.getText().length()!=0))
            return true;
        else 
            return false;
    }
    
    private void botonProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonProductoActionPerformed
        if (!hayPestañasAbiertas()){
            panelProductos.setVisible(true);
        }
        else
            cerrarPaneles();
    }//GEN-LAST:event_botonProductoActionPerformed

    private void botonPersonasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonPersonasActionPerformed
        if (!hayPestañasAbiertas()){
            panelPersonas.setVisible(true);
        }
        else
            cerrarPaneles();
    }//GEN-LAST:event_botonPersonasActionPerformed

    private void botonRankingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRankingsActionPerformed
        if (!hayPestañasAbiertas()){
            panelRankings.setVisible(true);
        }
        else
            cerrarPaneles();     
    }//GEN-LAST:event_botonRankingsActionPerformed

    private void botonProductoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonProductoMouseEntered
        if(hayPestañasAbiertas()){
            cerrarPaneles();
            panelProductos.setVisible(true);
        }
    }//GEN-LAST:event_botonProductoMouseEntered

    private void botonPersonasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonPersonasMouseEntered
        if(hayPestañasAbiertas()){        
            cerrarPaneles();
            panelPersonas.setVisible(true);
        }
    }//GEN-LAST:event_botonPersonasMouseEntered

    private void botonRankingsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonRankingsMouseEntered
        if(hayPestañasAbiertas()){
            cerrarPaneles();
            panelRankings.setVisible(true);
        }
    }//GEN-LAST:event_botonRankingsMouseEntered

    private void botonNuevoProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonNuevoProductoActionPerformed
       // nuevoProd np = new nuevoProd();
       limpiarTablaListadoProducto();
       cerrarPestañas();
       cerrarPaneles();
       reiniciarValores();
       fondo.setVisible(false);
       pestañaNuevoProd.setVisible(true);
       LabelCodNoDisp.setVisible(false);
    }//GEN-LAST:event_botonNuevoProductoActionPerformed

    private void botonGuardarNPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGuardarNPActionPerformed
        Session session = NewHibernateUtil.getSessionFactory().openSession();
        session.beginTransaction();
        try{
            Producto p1 = new Producto();       
            p1.setCantidad(Integer.parseInt(ingresaCantidad.getText()));
            p1.setCodigoprod(BigDecimal.valueOf(Integer.parseInt(ingresaCodProd.getText())));
            if(jComboBoxNeto.getSelectedItem().equals("Si"))
                p1.setEsneto(true);
            else
                p1.setEsneto(false);
            p1.setLineaprod(ingresaLinea.getText());
            p1.setNombreprod(ingresaNombreProd.getText());
            p1.setPrecioventapublico(BigDecimal.valueOf(Double.valueOf(ingresaPrecio.getText())));
            session.save(p1);
            session.getTransaction().commit();
        }   catch(Exception e)  {
            System.err.println(e);
        }
        pestañaNuevoProd.setVisible(false);
        fondo.setVisible(true);
        reiniciarValores();
        botonGuardarNP.setEnabled(false);
    }//GEN-LAST:event_botonGuardarNPActionPerformed

    private void botonCancelarNPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarNPActionPerformed
        pestañaNuevoProd.setVisible(false);
        fondo.setVisible(true);
        reiniciarValores();
    }//GEN-LAST:event_botonCancelarNPActionPerformed

    private void ingresaNombreProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresaNombreProdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaNombreProdActionPerformed

    private void botonGuardarNPKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_botonGuardarNPKeyReleased
    }//GEN-LAST:event_botonGuardarNPKeyReleased

    private void ingresaPrecioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaPrecioKeyReleased
        if(camposProductoCompletos())
            botonGuardarNP.setEnabled(true);
        else
            botonGuardarNP.setEnabled(false);
    }//GEN-LAST:event_ingresaPrecioKeyReleased

    private void ingresaLineaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaLineaKeyReleased
        if(camposProductoCompletos())
            botonGuardarNP.setEnabled(true);
        else
            botonGuardarNP.setEnabled(false);
    }//GEN-LAST:event_ingresaLineaKeyReleased

    private void ingresaNombreProdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaNombreProdKeyReleased
        if(camposProductoCompletos())
            botonGuardarNP.setEnabled(true);
        else
            botonGuardarNP.setEnabled(false);
    }//GEN-LAST:event_ingresaNombreProdKeyReleased

    private void ingresaLineaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaLineaKeyTyped
        
    }//GEN-LAST:event_ingresaLineaKeyTyped

    private void ingresaNombreProdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaNombreProdKeyTyped
        char car = evt.getKeyChar();
        if((car<'A' || car>'Z') && (car!=(char)KeyEvent.VK_SPACE))
            evt.consume();
    }//GEN-LAST:event_ingresaNombreProdKeyTyped

    private void ingresaPrecioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaPrecioKeyTyped
        char car = evt.getKeyChar();
        if((car<'0' || car>'9')&&(car!='.'))
            evt.consume();
    }//GEN-LAST:event_ingresaPrecioKeyTyped

    private void botonGuardarPersonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGuardarPersonaActionPerformed
        Session session = NewHibernateUtil.getSessionFactory().openSession();
        session.beginTransaction();
        try{
            Ficha f1 = new Ficha();    
            f1.setApellido(ingresaApellidoPersona.getText());
            f1.setCategoria(jComboBoxTipo.getSelectedItem().toString());
            f1.setCodigopostal(Long.valueOf(ingresaCodPostal.getText()));
            f1.setDni(Integer.parseInt(ingresaDNI.getText()));
            f1.setDomicilio(ingresaDomicilio.getText());
            f1.setEstadocivil(jComboBoxEstCivil.getSelectedItem().toString());
            SimpleDateFormat formatoFecha = new SimpleDateFormat("dd-MM-yyyy");
            //String fecha =""
            Date fechaAux1 = new Date();
            fechaAux1.setDate(Integer.parseInt(diaIngreso.getValue().toString()));
            fechaAux1.setMonth(Integer.parseInt(mesIngreso.getValue().toString())-1);
            fechaAux1.setYear(Integer.parseInt(añoIngreso.getValue().toString())-1900);
            f1.setFechaingreso(fechaAux1);
            Date fechaAux2 = new Date();
            fechaAux2.setDate(Integer.parseInt(diaNacimiento.getValue().toString()));
            fechaAux2.setMonth(Integer.parseInt(mesNacimiento.getValue().toString())-1);
            fechaAux2.setYear(Integer.parseInt(añoNacimiento.getValue().toString())-1900);
            f1.setFechanac(fechaAux2);
            f1.setLocalidad(ingresaLocalidad.getText());
            f1.setNombre(ingresaNombrePersona.getText());
            f1.setTelefono(BigDecimal.valueOf(Integer.parseInt(ingresaTelefono.getText())));
            session.save(f1);
            session.getTransaction().commit();
        }   catch(Exception e)  {
            System.err.println(e);
        }
        pestañaPersonas.setVisible(false);
        fondo.setVisible(true);
        reiniciarValores();
        botonGuardarPersona.setEnabled(false);         // TODO add your handling code here:
    }//GEN-LAST:event_botonGuardarPersonaActionPerformed

    private void botonGuardarPersonaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_botonGuardarPersonaKeyReleased
        // NO VA NADA
    }//GEN-LAST:event_botonGuardarPersonaKeyReleased

    private void botonCancelarPersonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarPersonaActionPerformed
        pestañaPersonas.setVisible(false);
        fondo.setVisible(true);
        reiniciarValores();
        botonGuardarNP.setEnabled(false);            // TODO add your handling code here:
        
    }//GEN-LAST:event_botonCancelarPersonaActionPerformed

    private void ingresaNombrePersonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresaNombrePersonaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaNombrePersonaActionPerformed

    private void ingresaNombrePersonaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaNombrePersonaKeyReleased
        if(camposFichaCompletos())
            botonGuardarPersona.setEnabled(true);
        else
            botonGuardarPersona.setEnabled(false);
    }//GEN-LAST:event_ingresaNombrePersonaKeyReleased

    private void ingresaNombrePersonaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaNombrePersonaKeyTyped
        char car = evt.getKeyChar();
        if((car<'A' || car>'Z') && (car!=(char)KeyEvent.VK_SPACE))
            evt.consume();
    }//GEN-LAST:event_ingresaNombrePersonaKeyTyped

    private void ingresaApellidoPersonaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaApellidoPersonaKeyReleased
        if(camposFichaCompletos())
            botonGuardarPersona.setEnabled(true);
        else
            botonGuardarPersona.setEnabled(false);
    }//GEN-LAST:event_ingresaApellidoPersonaKeyReleased

    private void ingresaApellidoPersonaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaApellidoPersonaKeyTyped
        char car = evt.getKeyChar();
        if((car<'A' || car>'Z') && (car!=(char)KeyEvent.VK_SPACE))
            evt.consume();
    }//GEN-LAST:event_ingresaApellidoPersonaKeyTyped

    private void ingresaDomicilioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaDomicilioKeyReleased
        if(camposFichaCompletos())
            botonGuardarPersona.setEnabled(true);
        else
            botonGuardarPersona.setEnabled(false);        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaDomicilioKeyReleased

    private void ingresaDomicilioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaDomicilioKeyTyped
        char car = evt.getKeyChar();
        if((car<'0' || car>'9') && (car<'A' || car>'Z') && (car!=(char)KeyEvent.VK_SPACE) )
            evt.consume();        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaDomicilioKeyTyped

    private void ingresaTelefonoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaTelefonoKeyReleased
        if(camposFichaCompletos())
            botonGuardarPersona.setEnabled(true);
        else
            botonGuardarPersona.setEnabled(false);        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaTelefonoKeyReleased

    private void ingresaTelefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaTelefonoKeyTyped
        char car = evt.getKeyChar();
        if(car<'0' || car>'9')
            evt.consume();
    }//GEN-LAST:event_ingresaTelefonoKeyTyped

    private void jComboBoxEstCivilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxEstCivilActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxEstCivilActionPerformed

    private void botonNuevaFichaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonNuevaFichaActionPerformed
       limpiarTablaListadoProducto();
        cerrarPestañas();
       cerrarPaneles();
       reiniciarValores();
       fondo.setVisible(false);
       pestañaPersonas.setVisible(true);
    }//GEN-LAST:event_botonNuevaFichaActionPerformed

    private void ingresaDNIKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaDNIKeyTyped
        char car = evt.getKeyChar();
        if(car<'0' || car>'9')
            evt.consume();
    }//GEN-LAST:event_ingresaDNIKeyTyped

    private void ingresaCantidadKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaCantidadKeyReleased
        if(camposProductoCompletos())
            botonGuardarNP.setEnabled(true);
        else
            botonGuardarNP.setEnabled(false);
    }//GEN-LAST:event_ingresaCantidadKeyReleased

    private void ingresaCantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaCantidadKeyTyped
        char car = evt.getKeyChar();
        if(car<'0' || car>'9')
            evt.consume();
    }//GEN-LAST:event_ingresaCantidadKeyTyped

    private void ingresaLocalidadKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaLocalidadKeyReleased
        if(camposFichaCompletos())
            botonGuardarPersona.setEnabled(true);
        else
            botonGuardarPersona.setEnabled(false);        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaLocalidadKeyReleased

    private void ingresaLocalidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaLocalidadKeyTyped
        char car = evt.getKeyChar();
        if((car<'0' || car>'9')&& (car<'A' || car>'Z') && (car!=(char)KeyEvent.VK_SPACE) )
            evt.consume();
    }//GEN-LAST:event_ingresaLocalidadKeyTyped

    private void ingresaCodPostalKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaCodPostalKeyReleased
        if(camposFichaCompletos())
            botonGuardarPersona.setEnabled(true);
        else
            botonGuardarPersona.setEnabled(false);        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaCodPostalKeyReleased

    private void ingresaCodPostalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaCodPostalKeyTyped
        char car = evt.getKeyChar();
        if(car<'0' || car>'9')
            evt.consume();
    }//GEN-LAST:event_ingresaCodPostalKeyTyped

    private void ingresaCodProdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaCodProdKeyReleased
        String text=ingresaCodProd.getText();
        if(text.length()>0){
            if (noExiste(text)){
                LabelCodNoDisp.setVisible(false);
                if(camposProductoCompletos())
                    botonGuardarNP.setEnabled(true);
                else
                    botonGuardarNP.setEnabled(false);
            }
            else{
                LabelCodNoDisp.setVisible(true);
                botonGuardarNP.setEnabled(false);
            }
        }
        else{
            botonGuardarNP.setEnabled(false);
            LabelCodNoDisp.setVisible(true);
        }
            
        
    }//GEN-LAST:event_ingresaCodProdKeyReleased

    private void ingresaDNIKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaDNIKeyReleased
        if(camposFichaCompletos())
            botonGuardarPersona.setEnabled(true);
        else
            botonGuardarPersona.setEnabled(false);
    }//GEN-LAST:event_ingresaDNIKeyReleased
    private void cargarTablaRankingCantidad(String categoria){
        List<Ficha> fichas;
       Session session = NewHibernateUtil.getSessionFactory().openSession();
       session.beginTransaction();
       Query q=session.createQuery("from Ficha f where f.categoria = '"+categoria+"' and f.dni in(2,4,6)");
       fichas= new ArrayList<Ficha>(q.list());
       session.getTransaction().commit();      
       session.close();
       Object[] fila = new Object[11]; //es la cantidad de atributos del producto
       for(Ficha f : fichas){fila[0]= f.getDni();
           fila[1]=f.getNombre();
           fila[2]=f.getApellido();
           fila[3]=f.getFechanac();
           fila[4]=f.getFechaingreso();
           fila[5]=f.getCategoria();
           fila[6]=f.getLocalidad();
           fila[7]=f.getDomicilio();
           fila[8]=f.getTelefono();
           fila[9]=f.getEstadocivil();
           fila[10]=f.getCodigopostal();
           modeloFichas.addRow(fila);
       }
    }
    private void cargarTablaRankingPVP(String categoria){
        
    }
    
    private void cargarTablaFichas() {
       List<Ficha> fichas;
       Session session = NewHibernateUtil.getSessionFactory().openSession();
       session.beginTransaction();
       Query q=session.createQuery("from Ficha");
       fichas= new ArrayList<Ficha>(q.list());
       session.getTransaction().commit();      
       session.close();
       Object[] fila = new Object[11]; //es la cantidad de atributos del producto
       for(Ficha f : fichas){
           fila[0]= f.getDni();
           fila[1]=f.getNombre();
           fila[2]=f.getApellido();
           fila[3]=f.getFechanac();
           fila[4]=f.getFechaingreso();
           fila[5]=f.getCategoria();
           fila[6]=f.getLocalidad();
           fila[7]=f.getDomicilio();
           fila[8]=f.getTelefono();
           fila[9]=f.getEstadocivil();
           fila[10]=f.getCodigopostal();
           modeloFichas.addRow(fila);
       }
    }
    
    private void cargarTablaProductos(){
        List<Producto> productos;
       Session session = NewHibernateUtil.getSessionFactory().openSession();
       session.beginTransaction();
       Query q=session.createQuery("from Producto");
       productos= new ArrayList<Producto>(q.list());
       session.getTransaction().commit();      
       session.close();
       Object[] fila = new Object[6]; //es la cantidad de atributos del producto
       for(Producto p : productos){
           fila[0]=p.getCodigoprod();
           fila[1]=p.getNombreprod();
           fila[2]=p.getLineaprod();
           fila[3]=p.getCantidad();
           fila[4]=p.getPrecioventapublico();
           if (p.getEsneto())
                fila[5]= "Si";
           else    
                fila[5]= "No";
           modelo.addRow(fila);
       }
    }
    
    private void botonVerListadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonVerListadoActionPerformed
       limpiarTablaListadoProducto();
       reiniciarValores();
       cerrarPestañas();
       cerrarPaneles();
       cargarTablaProductos();
       fondo.setVisible(false);
       pestañaVerListado.setVisible(true);
       
       //pestañaVerListado.setVisible(true);// TODO add your handling code here:
       
    }//GEN-LAST:event_botonVerListadoActionPerformed

    private void limpiarTablaListadoProducto(){
        int filas = modelo.getRowCount();
        for (int i=1; i<=filas;i++)
            modelo.removeRow(0);
    }
    private void limpiarTablaListadoVentas(){
        botonRealizarVenta.setEnabled(false);
        int filas = modeloProductosVenta.getRowCount();
        for (int i=1; i<=filas;i++)
            modeloProductosVenta.removeRow(0);
    }
    private void limpiarTablaListadoFichas() {
        int filas = modeloFichas.getRowCount();
        for (int i=1; i<=filas;i++)
            modeloFichas.removeRow(0);
    }
    
    private void cerrarListadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarListadoActionPerformed
        pestañaVerListado.setVisible(false);
        fondo.setVisible(true);
        limpiarTablaListadoProducto();
        reiniciarValores();
    }//GEN-LAST:event_cerrarListadoActionPerformed

    private void ingresaFiltroProdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaFiltroProdKeyReleased
        limpiarTablaListadoProducto();
        List<Producto> productos;
        Session session = NewHibernateUtil.getSessionFactory().openSession();
       session.beginTransaction();
       Query q=session.createQuery("from Producto where lower(nombreprod) like '%"+ingresaFiltroProd.getText().toLowerCase()+"%' or cast(codigoprod as text) like '"+ingresaFiltroProd.getText()+"%'");
       productos= new ArrayList<Producto>(q.list());
       session.getTransaction().commit();      
       session.close();
       Object[] fila = new Object[6]; //es la cantidad de atributos del producto
       for(Producto p : productos){
           fila[0]=p.getCodigoprod();
           fila[1]=p.getNombreprod();
           fila[2]=p.getLineaprod();
           fila[3]=p.getCantidad();
           fila[4]=p.getPrecioventapublico();
           if (p.getEsneto())
                fila[5]= "Si";
           else    
                fila[5]= "No";
           modelo.addRow(fila);
       }
    }//GEN-LAST:event_ingresaFiltroProdKeyReleased

    private void botonEliminarProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarProdActionPerformed
        if(jTable1.getSelectedRow()>=0){
            int codSelect= Integer.parseInt(modelo.getValueAt(jTable1.getSelectedRow(), 0).toString());
            modelo.removeRow(jTable1.getSelectedRow());
            Session session = NewHibernateUtil.getSessionFactory().openSession();
            session.beginTransaction();
            Query q=session.createQuery("delete from Producto where codigoprod = "+codSelect+"");
            int result = q.executeUpdate();
            session.getTransaction().commit();      
            // TODO add your handling code here:
        }
    }//GEN-LAST:event_botonEliminarProdActionPerformed

    private void ingresaFiltroProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresaFiltroProdActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_ingresaFiltroProdActionPerformed

    private void ingresaFiltroProdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ingresaFiltroProdMouseClicked
        cerrarPaneles();
    }//GEN-LAST:event_ingresaFiltroProdMouseClicked

    private void ingresaCodProdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ingresaCodProdMouseClicked
        cerrarPaneles();
// TODO add your handling code here:
    }//GEN-LAST:event_ingresaCodProdMouseClicked

    private void ingresaNombreProdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ingresaNombreProdMouseClicked
         cerrarPaneles();
// TODO add your handling code here:
    }//GEN-LAST:event_ingresaNombreProdMouseClicked

    private void ingresaLineaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ingresaLineaMouseClicked
        cerrarPaneles();
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaLineaMouseClicked

    private void ingresaPrecioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ingresaPrecioMouseClicked
        cerrarPaneles();
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaPrecioMouseClicked

    private void ingresaCantidadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ingresaCantidadMouseClicked
        cerrarPaneles();
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaCantidadMouseClicked

    private void ingresaFiltroProd1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ingresaFiltroProd1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaFiltroProd1MouseClicked

    private void ingresaFiltroProd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresaFiltroProd1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaFiltroProd1ActionPerformed

    private void ingresaFiltroProd1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaFiltroProd1KeyReleased
        limpiarTablaListadoProducto();
        List<Producto> productos;
        Session session = NewHibernateUtil.getSessionFactory().openSession();
        session.beginTransaction();
        Query q=session.createQuery("from Producto where cantidad<5 and nombreprod like '%"+ingresaFiltroProd1.getText()+"%'");
        productos= new ArrayList<Producto>(q.list());
        session.getTransaction().commit();      
        session.close();
        Object[] fila = new Object[6]; //es la cantidad de atributos del producto
        for(Producto p : productos){
            fila[0]=p.getCodigoprod();
            fila[1]=p.getNombreprod();
            fila[2]=p.getLineaprod();
            fila[3]=p.getCantidad();
            fila[4]=p.getPrecioventapublico();
            if (p.getEsneto())
                fila[5]= "Si";
           else    
                fila[5]= "No";
            modelo.addRow(fila);
       }
    }//GEN-LAST:event_ingresaFiltroProd1KeyReleased

    private void cerrarStockMinimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarStockMinimoActionPerformed
        pestañaStockMinimo.setVisible(false);
        fondo.setVisible(true);
        limpiarTablaListadoProducto();
        reiniciarValores();
    }//GEN-LAST:event_cerrarStockMinimoActionPerformed

    private void botonStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonStockActionPerformed
       limpiarTablaListadoProducto();
       List<Producto> productos;
       cerrarPestañas();
       cerrarPaneles();
       reiniciarValores();
       fondo.setVisible(false);
       pestañaStockMinimo.setVisible(true);
       Session session = NewHibernateUtil.getSessionFactory().openSession();
       session.beginTransaction();
       Query q=session.createQuery("from Producto where cantidad<5");
       productos= new ArrayList<Producto>(q.list());
       session.getTransaction().commit();      
       session.close();
       Object[] fila = new Object[6]; //es la cantidad de atributos del producto
       for(Producto p : productos){
           fila[0]=p.getCodigoprod();
           fila[1]=p.getNombreprod();
           fila[2]=p.getLineaprod();
           fila[3]=p.getCantidad();
           fila[4]=p.getPrecioventapublico();
           if (p.getEsneto())
                fila[5]= "Si";
           else    
                fila[5]= "No";
           modelo.addRow(fila);
       }        // TODO add your handling code here:
    }//GEN-LAST:event_botonStockActionPerformed

    private void ingresaCodProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresaCodProdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaCodProdActionPerformed

    private void botonEditarProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEditarProdActionPerformed
        if(jTable1.getSelectedRow()>=0){
            cerrarPestañas();
            pestañaEditarProducto.setVisible(true);
            String codProdEditado=modelo.getValueAt(jTable1.getSelectedRow(), 0).toString();
            String nombreProdEditado=modelo.getValueAt(jTable1.getSelectedRow(), 1).toString();
            String lineaProdEditado=modelo.getValueAt(jTable1.getSelectedRow(), 2).toString();
            String cantidadProdEditado=modelo.getValueAt(jTable1.getSelectedRow(), 3).toString();
            String precioProdEditado=modelo.getValueAt(jTable1.getSelectedRow(), 4).toString();
            String esNetoEditado=modelo.getValueAt(jTable1.getSelectedRow(), 5).toString();
            ingresaCodProd1.setText(codProdEditado);
            ingresaNombreProd1.setText(nombreProdEditado);
            ingresaLinea1.setText(lineaProdEditado);
            ingresaCantidad1.setText(cantidadProdEditado);
            ingresaPrecio1.setText(precioProdEditado);
            if(esNetoEditado.equals("Si"))
                jComboBoxNeto1.setSelectedIndex(0);
            else
                jComboBoxNeto1.setSelectedIndex(1);
            // TODO add your handling code here:
        }
        
        
    }//GEN-LAST:event_botonEditarProdActionPerformed

    private void botonGuardarCambiosProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGuardarCambiosProdActionPerformed
        
        //ELIMINO EL PRODUCTO ANTERIOR
        int codSelect= Integer.parseInt(modelo.getValueAt(jTable1.getSelectedRow(), 0).toString());
        Session session = NewHibernateUtil.getSessionFactory().openSession();
        session.beginTransaction();
        Query q=session.createQuery("delete from Producto where codigoprod = "+codSelect+"");
        int result = q.executeUpdate();
        session.getTransaction().commit();
        session.close();
        
        //AGREGO EL PRODUCTO MODIFICADO
        Session session1 = NewHibernateUtil.getSessionFactory().openSession();
        session1.beginTransaction();
        try{
            Producto p1 = new Producto();       
            p1.setCantidad(Integer.parseInt(ingresaCantidad1.getText()));
            p1.setCodigoprod(BigDecimal.valueOf(Integer.parseInt(ingresaCodProd1.getText())));
            if(jComboBoxNeto1.getSelectedItem().equals("Si"))
                p1.setEsneto(true);
            else
                p1.setEsneto(false);
            p1.setLineaprod(ingresaLinea1.getText());
            p1.setNombreprod(ingresaNombreProd1.getText());
            p1.setPrecioventapublico(BigDecimal.valueOf(Double.valueOf(ingresaPrecio1.getText())));
            session1.save(p1);
            session1.getTransaction().commit();
        }   catch(Exception e)  {
            System.err.println(e);
        }
         session1.close();
         
        reiniciarValores();
        pestañaEditarProducto.setVisible(false);
        
        //CARGO DE NUEVO LA TABLA DESDE LA DB
        limpiarTablaListadoProducto();
        cargarTablaProductos();
        pestañaVerListado.setVisible(true);
        
    }//GEN-LAST:event_botonGuardarCambiosProdActionPerformed

    private void botonGuardarCambiosProdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_botonGuardarCambiosProdKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_botonGuardarCambiosProdKeyReleased

    private void botonCancelarEditarProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarEditarProdActionPerformed
        pestañaEditarProducto.setVisible(false);
        pestañaVerListado.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_botonCancelarEditarProdActionPerformed

    private void ingresaCodProd1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ingresaCodProd1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaCodProd1MouseClicked

    private void ingresaCodProd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresaCodProd1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaCodProd1ActionPerformed

    private void ingresaCodProd1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaCodProd1KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaCodProd1KeyReleased

    private void ingresaNombreProd1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ingresaNombreProd1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaNombreProd1MouseClicked

    private void ingresaNombreProd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresaNombreProd1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaNombreProd1ActionPerformed

    private void ingresaNombreProd1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaNombreProd1KeyReleased
       if(camposProductoCompletos1())
                    botonGuardarCambiosProd.setEnabled(true);
                else
                    botonGuardarCambiosProd.setEnabled(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaNombreProd1KeyReleased

    private void ingresaNombreProd1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaNombreProd1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaNombreProd1KeyTyped

    private void ingresaLinea1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ingresaLinea1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaLinea1MouseClicked

    private void ingresaLinea1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaLinea1KeyReleased
        if(camposProductoCompletos1())
                    botonGuardarCambiosProd.setEnabled(true);
                else
                    botonGuardarCambiosProd.setEnabled(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaLinea1KeyReleased

    private void ingresaLinea1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaLinea1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaLinea1KeyTyped

    private void ingresaPrecio1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ingresaPrecio1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaPrecio1MouseClicked

    private void ingresaPrecio1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaPrecio1KeyReleased
        if(camposProductoCompletos1())
                    botonGuardarCambiosProd.setEnabled(true);
                else
                    botonGuardarCambiosProd.setEnabled(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaPrecio1KeyReleased

    private void ingresaPrecio1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaPrecio1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaPrecio1KeyTyped

    private void ingresaCantidad1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ingresaCantidad1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaCantidad1MouseClicked

    private void ingresaCantidad1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaCantidad1KeyReleased
        if(camposProductoCompletos1())
                    botonGuardarCambiosProd.setEnabled(true);
                else
                    botonGuardarCambiosProd.setEnabled(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaCantidad1KeyReleased

    private void ingresaCantidad1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaCantidad1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaCantidad1KeyTyped

    private void ingresaFiltroFichaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ingresaFiltroFichaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaFiltroFichaMouseClicked

    private void ingresaFiltroFichaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresaFiltroFichaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaFiltroFichaActionPerformed

    private void ingresaFiltroFichaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaFiltroFichaKeyReleased
        limpiarTablaListadoFichas();
        List<Ficha> fichas;
        Session session = NewHibernateUtil.getSessionFactory().openSession();
       session.beginTransaction();
       Query q=session.createQuery("from Ficha where (lower(nombre) like '%"+ingresaFiltroFicha.getText().toLowerCase()+"%') or (lower(apellido) like '%"+ingresaFiltroFicha.getText().toLowerCase()+"%')");
       fichas= new ArrayList<Ficha>(q.list());
       session.getTransaction().commit();      
       session.close();
       Object[] fila = new Object[11]; //es la cantidad de atributos del producto
       for(Ficha f : fichas){
           fila[0]= f.getDni();
           fila[1]=f.getNombre();
           fila[2]=f.getApellido();
           fila[3]=f.getFechanac();
           fila[4]=f.getFechaingreso();
           fila[5]=f.getCategoria();
           fila[6]=f.getLocalidad();
           fila[7]=f.getDomicilio();
           fila[8]=f.getTelefono();
           fila[9]=f.getEstadocivil();
           fila[10]=f.getCodigopostal();
           modeloFichas.addRow(fila);
       }
    }//GEN-LAST:event_ingresaFiltroFichaKeyReleased

    private void cerrarListado1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarListado1ActionPerformed
        pestañaVerFichas.setVisible(false);
        fondo.setVisible(true);
        reiniciarValores();
        limpiarTablaListadoFichas();
    }//GEN-LAST:event_cerrarListado1ActionPerformed

    private void botonEliminarFichaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarFichaActionPerformed
        if(jTable3.getSelectedRow()>=0){
            int codSelect= Integer.parseInt(modeloFichas.getValueAt(jTable3.getSelectedRow(), 0).toString());
            modeloFichas.removeRow(jTable3.getSelectedRow());
            Session session = NewHibernateUtil.getSessionFactory().openSession();
            session.beginTransaction();
            Query q=session.createQuery("delete from Ficha where dni = "+codSelect+"");
            int result = q.executeUpdate();
            session.getTransaction().commit();     
        }
    }//GEN-LAST:event_botonEliminarFichaActionPerformed

    private void botonEditarFichaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEditarFichaActionPerformed
         if(jTable3.getSelectedRow()>=0){
            cerrarPestañas();
            pestañaEditarPersona.setVisible(true);
            String DNIeditado=modeloFichas.getValueAt(jTable3.getSelectedRow(), 0).toString();
            String nombreEditado=modeloFichas.getValueAt(jTable3.getSelectedRow(), 1).toString();
            String apellidoEditado=modeloFichas.getValueAt(jTable3.getSelectedRow(), 2).toString();
            String nacimientoEditado=modeloFichas.getValueAt(jTable3.getSelectedRow(), 3).toString();
            String ingresoEditado=modeloFichas.getValueAt(jTable3.getSelectedRow(), 4).toString();
            String categoriaEditado=modeloFichas.getValueAt(jTable3.getSelectedRow(), 5).toString();
            String localidadEditado=modeloFichas.getValueAt(jTable3.getSelectedRow(), 6).toString();
            String domicilioEditado=modeloFichas.getValueAt(jTable3.getSelectedRow(), 7).toString();
            String telefonoEditado=modeloFichas.getValueAt(jTable3.getSelectedRow(), 8).toString();
            String estadoCivilEditado=modeloFichas.getValueAt(jTable3.getSelectedRow(), 9).toString();
            String postalEditado=modeloFichas.getValueAt(jTable3.getSelectedRow(), 10).toString();
            ingresaDNI1.setText(DNIeditado);
            ingresaNombrePersona1.setText(nombreEditado);
            ingresaApellidoPersona1.setText(apellidoEditado);
           
            String[] parts = nacimientoEditado.split("-");
            diaNacimiento1.setValue(Integer.valueOf(parts[2]));
            mesNacimiento1.setValue(Integer.valueOf(parts[1]));
            añoNacimiento1.setValue(Integer.valueOf(parts[0]));
            
            String[] parts1 = ingresoEditado.split("-");
            diaIngreso1.setValue(Integer.valueOf(parts1[2]));
            mesIngreso1.setValue(Integer.valueOf(parts1[1]));
            añoIngreso1.setValue(Integer.valueOf(parts1[0]));
            
            //ingresaNacimiento1.setText(cantidadProdEditado);        FALTAN LAS FECHASSSSSSSSSSS
          //  ingresaFechaIngreso.setText(precioProdEditado);
            if (categoriaEditado.equals("Lider"))
                jComboBoxTipo1.setSelectedIndex(0);
            else
                jComboBoxTipo1.setSelectedIndex(1);
            ingresaLocalidad1.setText(localidadEditado);
            ingresaDomicilio1.setText(domicilioEditado);
            ingresaTelefono1.setText(telefonoEditado);
            if (estadoCivilEditado.equals("Casada"))
                jComboBoxEstCivil1.setSelectedIndex(0);
            else
                jComboBoxEstCivil1.setSelectedIndex(1);
            ingresaCodPostal1.setText(postalEditado);
           // if(esNetoEditado.equals("Si"))
               // jComboBoxNeto1.setSelectedIndex(0);
           // else
                //jComboBoxNeto1.setSelectedIndex(1);
            // TODO add your handling code here:
        }
        
        
    }//GEN-LAST:event_botonEditarFichaActionPerformed

    private void botonListadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonListadoActionPerformed
       limpiarTablaListadoFichas();
       
       cerrarPestañas();
       cerrarPaneles();
       reiniciarValores();
       cargarTablaFichas();
       fondo.setVisible(false);
       pestañaVerFichas.setVisible(true);
       
        
        // TODO add your handling code here:
    }//GEN-LAST:event_botonListadoActionPerformed

    private void botonGuardarPersona1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGuardarPersona1ActionPerformed
        //ELIMINO FICHA VIEJA
        int codSelect= Integer.parseInt(modeloFichas.getValueAt(jTable3.getSelectedRow(), 0).toString());
        modeloFichas.removeRow(jTable3.getSelectedRow());
        Session session = NewHibernateUtil.getSessionFactory().openSession();
        session.beginTransaction();
        Query q=session.createQuery("delete from Ficha where dni = "+codSelect+"");
        int result = q.executeUpdate();
        session.getTransaction().commit();
        
        //CREO NUEVA FICHA
        
        Session session1 = NewHibernateUtil.getSessionFactory().openSession();
        session1.beginTransaction();
        try{
            Ficha f1 = new Ficha();    
            f1.setApellido(ingresaApellidoPersona1.getText());
            f1.setCategoria(jComboBoxTipo1.getSelectedItem().toString());
            f1.setCodigopostal(Long.valueOf(ingresaCodPostal1.getText()));
            f1.setDni(Integer.parseInt(ingresaDNI1.getText()));
            f1.setDomicilio(ingresaDomicilio1.getText());
            f1.setEstadocivil(jComboBoxEstCivil1.getSelectedItem().toString());
            //SimpleDateFormat formatoFecha = new SimpleDateFormat("dd-MM-yyyy");
            //String fecha =""
            Date fechaAux1 = new Date();
            fechaAux1.setDate(Integer.parseInt(diaIngreso1.getValue().toString()));
            fechaAux1.setMonth(Integer.parseInt(mesIngreso1.getValue().toString())-1);
            fechaAux1.setYear(Integer.parseInt(añoIngreso1.getValue().toString())-1900);
            f1.setFechaingreso(fechaAux1);
            Date fechaAux2 = new Date();
            fechaAux2.setDate(Integer.parseInt(diaNacimiento1.getValue().toString()));
            fechaAux2.setMonth(Integer.parseInt(mesNacimiento1.getValue().toString())-1);
            fechaAux2.setYear(Integer.parseInt(añoNacimiento1.getValue().toString())-1900);
            f1.setFechanac(fechaAux2);
            f1.setLocalidad(ingresaLocalidad1.getText());
            f1.setNombre(ingresaNombrePersona1.getText());
            f1.setTelefono(BigDecimal.valueOf(Integer.parseInt(ingresaTelefono1.getText())));
            session1.save(f1);
            session1.getTransaction().commit();
        }   catch(Exception e)  {
            System.err.println(e);
        }
        
        pestañaEditarPersona.setVisible(false);
        reiniciarValores();
        
        //CARGO DE NUEVO LA TABLA DESDE LA DB
        limpiarTablaListadoFichas();
        cargarTablaFichas();
        pestañaVerFichas.setVisible(true);
        
        
        
        
        
        //ingresaDNI.setText("");
        //ingresaNombrePersona.setText("");
        //ingresaApellidoPersona.setText("");
        //ingresaLocalidad.setText("");
        //ingresaDomicilio.setText("");
        //ingresaTelefono.setText("");
        //ingresaCodPostal.setText("");
        //botonGuardarPersona.setEnabled(false);
    }//GEN-LAST:event_botonGuardarPersona1ActionPerformed

    private void botonGuardarPersona1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_botonGuardarPersona1KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_botonGuardarPersona1KeyReleased

    private void botonCancelarPersona1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarPersona1ActionPerformed
        pestañaEditarPersona.setVisible(false);
        pestañaVerFichas.setVisible(true);
        reiniciarValores();
    }//GEN-LAST:event_botonCancelarPersona1ActionPerformed

    private void ingresaDNI1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaDNI1KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaDNI1KeyReleased

    private void ingresaDNI1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaDNI1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaDNI1KeyTyped

    private void ingresaNombrePersona1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresaNombrePersona1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaNombrePersona1ActionPerformed

    private void ingresaNombrePersona1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaNombrePersona1KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaNombrePersona1KeyReleased

    private void ingresaNombrePersona1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaNombrePersona1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaNombrePersona1KeyTyped

    private void ingresaApellidoPersona1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaApellidoPersona1KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaApellidoPersona1KeyReleased

    private void ingresaApellidoPersona1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaApellidoPersona1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaApellidoPersona1KeyTyped

    private void ingresaDomicilio1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaDomicilio1KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaDomicilio1KeyReleased

    private void ingresaDomicilio1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaDomicilio1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaDomicilio1KeyTyped

    private void ingresaTelefono1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaTelefono1KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaTelefono1KeyReleased

    private void ingresaTelefono1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaTelefono1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaTelefono1KeyTyped

    private void jComboBoxEstCivil1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxEstCivil1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxEstCivil1ActionPerformed

    private void ingresaLocalidad1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaLocalidad1KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaLocalidad1KeyReleased

    private void ingresaLocalidad1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaLocalidad1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaLocalidad1KeyTyped

    private void ingresaCodPostal1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaCodPostal1KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaCodPostal1KeyReleased

    private void ingresaCodPostal1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaCodPostal1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaCodPostal1KeyTyped

    private void botonRealizarVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRealizarVentaActionPerformed
            int filas = modeloProductosVenta.getRowCount();
            
                Session session = NewHibernateUtil.getSessionFactory().openSession();
                session.beginTransaction();
            try{
                
                List<Long> lista;
                Query q=session.createQuery("SELECT MAX(v.id.idVenta) from Venta v");
                lista= new ArrayList<Long>(q.list());
                Long idVenta =lista.get(0)+1;
                
                for (int i=0; i<filas;i++){
                    Venta v1= new Venta();
                    VentaId clave= new VentaId();
                    clave.setIdVenta(idVenta);
                    clave.setCodigoproducto(BigDecimal.valueOf(Long.parseLong(modeloProductosVenta.getValueAt(0, 0).toString())));
                    clave.setDni(Long.parseLong(ingresaDniVenta.getText()));
                    v1.setCantidad(Long.parseLong(modeloProductosVenta.getValueAt(0, 2).toString()));
                    Date date = new Date();
                    v1.setFecha(date);
                    v1.setId(clave);
                    modeloProductosVenta.removeRow(0);
                    session.save(v1);                    
                }
                session.getTransaction().commit();
            }catch(Exception e)  {
            System.err.println(e);
            }
            limpiarTablaListadoVentas();
            reiniciarValores();
            contadorVenta++;
    }//GEN-LAST:event_botonRealizarVentaActionPerformed

    private void botonRealizarVentaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_botonRealizarVentaKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_botonRealizarVentaKeyReleased

    private void botonCancelarVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarVentaActionPerformed
        reiniciarValores();
        pestañaVenta.setVisible(false);
        fondo.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_botonCancelarVentaActionPerformed

    private void ingresaDniVentaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaDniVentaKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaDniVentaKeyReleased

    private void ingresaDniVentaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaDniVentaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaDniVentaKeyTyped

    private void ingresaNombreVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresaNombreVentaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaNombreVentaActionPerformed

    private void ingresaNombreVentaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaNombreVentaKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaNombreVentaKeyReleased

    private void ingresaNombreVentaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaNombreVentaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaNombreVentaKeyTyped

    private void ingresaApellidoVentaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaApellidoVentaKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaApellidoVentaKeyReleased

    private void ingresaApellidoVentaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaApellidoVentaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaApellidoVentaKeyTyped

    private void botonVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonVentaActionPerformed
        cerrarPestañas();
        cerrarPaneles();
        reiniciarValores();
        fondo.setVisible(false);
        limpiarTablaListadoVentas();
        pestañaVenta.setVisible(true);
        precioTotalVenta=0d;
        precioSubtotalVenta=0d;
    }//GEN-LAST:event_botonVentaActionPerformed

    private void ingresaFiltroFicha1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ingresaFiltroFicha1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaFiltroFicha1MouseClicked

    private void ingresaFiltroFicha1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresaFiltroFicha1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaFiltroFicha1ActionPerformed

    private void ingresaFiltroFicha1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaFiltroFicha1KeyReleased
        limpiarTablaListadoFichas();
        List<Ficha> fichas;
        Session session = NewHibernateUtil.getSessionFactory().openSession();
       session.beginTransaction();
       Query q=session.createQuery("from Ficha where (lower(nombre) like '%"+ingresaFiltroFicha1.getText().toLowerCase()+"%') or (lower(apellido) like '%"+ingresaFiltroFicha1.getText().toLowerCase()+"%')");
       fichas= new ArrayList<Ficha>(q.list());
       session.getTransaction().commit();      
       session.close();
       Object[] fila = new Object[11]; //es la cantidad de atributos del producto
       for(Ficha f : fichas){
           fila[0]= f.getDni();
           fila[1]=f.getNombre();
           fila[2]=f.getApellido();
           fila[3]=f.getFechanac();
           fila[4]=f.getFechaingreso();
           fila[5]=f.getCategoria();
           fila[6]=f.getLocalidad();
           fila[7]=f.getDomicilio();
           fila[8]=f.getTelefono();
           fila[9]=f.getEstadocivil();
           fila[10]=f.getCodigopostal();
           modeloFichas.addRow(fila);
       }
    }//GEN-LAST:event_ingresaFiltroFicha1KeyReleased

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        pestañaFichasParaVenta.setVisible(false);
        pestañaVenta.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void buscarFichaVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarFichaVentaActionPerformed
        limpiarTablaListadoFichas();
        cerrarPestañas();
        cargarTablaFichas();
        fondo.setVisible(false);
        pestañaFichasParaVenta.setVisible(true);
    }//GEN-LAST:event_buscarFichaVentaActionPerformed

    private void seleccionarFichaVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionarFichaVentaActionPerformed
        if(jTable5.getSelectedRow()>=0){
            cerrarPestañas();
            pestañaVenta.setVisible(true);
            String DNIeditado=modeloFichas.getValueAt(jTable5.getSelectedRow(), 0).toString();
            String nombreEditado=modeloFichas.getValueAt(jTable5.getSelectedRow(), 1).toString();
            String apellidoEditado=modeloFichas.getValueAt(jTable5.getSelectedRow(), 2).toString();
            String categoriaEditado=modeloFichas.getValueAt(jTable5.getSelectedRow(), 5).toString();            
            ingresaDniVenta.setText(DNIeditado);
            ingresaNombreVenta.setText(nombreEditado);
            ingresaApellidoVenta.setText(apellidoEditado);
            if (categoriaEditado.equals("Lider")){
                jComboBoxTipo2.setSelectedIndex(0);
                descuentoVenta.setText(DESCUENTOLIDER+"");
            }
            else{
                jComboBoxTipo2.setSelectedIndex(1);
                descuentoVenta.setText(DESCUENTOEXPERTA+"");
            }
        }


        
    }//GEN-LAST:event_seleccionarFichaVentaActionPerformed

    private void ingresaFiltroProd2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ingresaFiltroProd2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaFiltroProd2MouseClicked

    private void ingresaFiltroProd2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresaFiltroProd2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaFiltroProd2ActionPerformed

    private void ingresaFiltroProd2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresaFiltroProd2KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresaFiltroProd2KeyReleased

    private void seleccionarFichaVenta1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionarFichaVenta1ActionPerformed
         if((jTable6.getSelectedRow()>=0) && (Integer.valueOf(jSpinner1.getValue().toString()))>0) {
            cerrarPestañas();
            pestañaVenta.setVisible(true);
            String codProd=modelo.getValueAt(jTable6.getSelectedRow(), 0).toString();
            String nombre=modelo.getValueAt(jTable6.getSelectedRow(), 1).toString();
            String precio=modelo.getValueAt(jTable6.getSelectedRow(), 4).toString();
            String esNeto=modelo.getValueAt(jTable6.getSelectedRow(), 5).toString();
            
           Object[] fila = new Object[6]; //es la cantidad de atributos de la tabla
           fila[0]=codProd;
           fila[1]=nombre;
           fila[2]=Integer.valueOf(jSpinner1.getValue().toString());
           fila[3]=esNeto;
           double precioTotal= Double.valueOf(precio)* Integer.valueOf(jSpinner1.getValue().toString());
           fila[4]=precio;
           fila[5]=precioTotal;
           modeloProductosVenta.addRow(fila);
           precioSubtotalVenta=precioSubtotalVenta+precioTotal;
           subtotalVenta.setText(precioSubtotalVenta+"");
           precioTotalVenta=precioSubtotalVenta*(1-Double.parseDouble(descuentoVenta.getText()));
           totalVenta.setText(precioTotalVenta+"");
           botonRealizarVenta.setEnabled(true);
        }
    }//GEN-LAST:event_seleccionarFichaVenta1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        pestañaSeleccionarProductoVenta.setVisible(false);
        pestañaVenta.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void botonAgregarProductoAVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarProductoAVentaActionPerformed
        pestañaVenta.setVisible(false);
        pestañaSeleccionarProductoVenta.setVisible(true);
        
        limpiarTablaListadoProducto();
        
       cargarTablaProductos();
       jSpinner1.setValue(Integer.valueOf("1"));
    }//GEN-LAST:event_botonAgregarProductoAVentaActionPerformed

    private void jSpinner1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jSpinner1PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jSpinner1PropertyChange

    private void jTable4ComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jTable4ComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable4ComponentAdded

    private void jTable4AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTable4AncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable4AncestorAdded

    private void botonEliminarProductoDeVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarProductoDeVentaActionPerformed
        if(jTable4.getSelectedRow()>=0){
            int codSelect= Integer.parseInt(modeloProductosVenta.getValueAt(jTable4.getSelectedRow(), 0).toString());
            
           double precioTotalProducto=(double)modeloProductosVenta.getValueAt(jTable4.getSelectedRow(),5);
           precioSubtotalVenta=precioSubtotalVenta-precioTotalProducto;
           subtotalVenta.setText(precioSubtotalVenta+"");
           precioTotalVenta=precioSubtotalVenta*Double.parseDouble(descuentoVenta.getText());
           totalVenta.setText(precioTotalVenta+"");
            
            modeloProductosVenta.removeRow(jTable4.getSelectedRow());
            if(jTable4.getRowCount() == 0)
                botonRealizarVenta.setEnabled(false);
        }
    }//GEN-LAST:event_botonEliminarProductoDeVentaActionPerformed

    private void botonConsignacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConsignacionActionPerformed
        reiniciarValores();
        // TODO add your handling code here:
    }//GEN-LAST:event_botonConsignacionActionPerformed

    private void botonDevolucionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonDevolucionActionPerformed
        
        reiniciarValores();
        // TODO add your handling code here:
    }//GEN-LAST:event_botonDevolucionActionPerformed

    private void botonMovimientosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonMovimientosActionPerformed
        reiniciarValores();
        // TODO add your handling code here:
    }//GEN-LAST:event_botonMovimientosActionPerformed

    private void botonResumenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonResumenActionPerformed
        reiniciarValores();
        // TODO add your handling code here:
    }//GEN-LAST:event_botonResumenActionPerformed

    private void botonListado1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonListado1ActionPerformed
        reiniciarValores();
        
       cerrarPestañas();
       cerrarPaneles();
       fondo.setVisible(false);
       pestañaRankingLider.setVisible(true);       
        // TODO add your handling code here:
    }//GEN-LAST:event_botonListado1ActionPerformed

    private void botonListado2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonListado2ActionPerformed
        reiniciarValores();
        
       cerrarPestañas();
       cerrarPaneles();
       fondo.setVisible(false);
       pestañaRankingExpertas.setVisible(true);
       
        // TODO add your handling code here:
    }//GEN-LAST:event_botonListado2ActionPerformed

    private void cerrarListado2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarListado2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cerrarListado2ActionPerformed

    private void jComboBoxTipo3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxTipo3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxTipo3ActionPerformed

    private void cerrarListado4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarListado4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cerrarListado4ActionPerformed

    private void jComboBoxTipo4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxTipo4ActionPerformed
        
        if (String.valueOf(jComboBoxTipo4.getSelectedItem()).equals("Por cantidad"))
            cargarTablaRankingCantidad("Experta");
        else 
            cargarTablaRankingPVP("Experta");        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxTipo4ActionPerformed

    private void jComboBoxTipo4ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxTipo4ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxTipo4ItemStateChanged

    private void botonCajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCajaActionPerformed
        if (!hayPestañasAbiertas()){
            panelCaja.setVisible(true);
        }
        else
        cerrarPaneles();
    }//GEN-LAST:event_botonCajaActionPerformed

    private void botonCajaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonCajaMouseEntered
        if(hayPestañasAbiertas()){
            cerrarPaneles();
            panelCaja.setVisible(true);
        }
    }//GEN-LAST:event_botonCajaMouseEntered

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelCodNoDisp;
    private javax.swing.JLabel LabelLinea;
    private javax.swing.JLabel LabelLinea1;
    private javax.swing.JLabel LabelNombreProd;
    private javax.swing.JLabel LabelNombreProd1;
    private javax.swing.JLabel LabelPrecio;
    private javax.swing.JLabel LabelPrecio1;
    private javax.swing.JSpinner añoIngreso;
    private javax.swing.JSpinner añoIngreso1;
    private javax.swing.JSpinner añoNacimiento;
    private javax.swing.JSpinner añoNacimiento1;
    private javax.swing.JButton botonAgregarProductoAVenta;
    private javax.swing.JButton botonCaja;
    private javax.swing.JButton botonCancelarEditarProd;
    private javax.swing.JButton botonCancelarNP;
    private javax.swing.JButton botonCancelarPersona;
    private javax.swing.JButton botonCancelarPersona1;
    private javax.swing.JButton botonCancelarVenta;
    private javax.swing.JButton botonConsignacion;
    private javax.swing.JButton botonDevolucion;
    private javax.swing.JButton botonEditarFicha;
    private javax.swing.JButton botonEditarProd;
    private javax.swing.JButton botonEliminarFicha;
    private javax.swing.JButton botonEliminarProd;
    private javax.swing.JButton botonEliminarProductoDeVenta;
    private javax.swing.JButton botonGuardarCambiosProd;
    private javax.swing.JButton botonGuardarNP;
    private javax.swing.JButton botonGuardarPersona;
    private javax.swing.JButton botonGuardarPersona1;
    private javax.swing.JButton botonListado;
    private javax.swing.JButton botonListado1;
    private javax.swing.JButton botonListado2;
    private javax.swing.JButton botonMovimientos;
    private javax.swing.JButton botonNuevaFicha;
    private javax.swing.JButton botonNuevoProducto;
    private javax.swing.JButton botonPersonas;
    private javax.swing.JButton botonProducto;
    private javax.swing.JButton botonRankings;
    private javax.swing.JButton botonRealizarVenta;
    private javax.swing.JButton botonResumen;
    private javax.swing.JButton botonStock;
    private javax.swing.JButton botonVenta;
    private javax.swing.JButton botonVerListado;
    private javax.swing.JButton buscarFichaVenta;
    private javax.swing.JButton cerrarListado;
    private javax.swing.JButton cerrarListado1;
    private javax.swing.JButton cerrarListado2;
    private javax.swing.JButton cerrarListado4;
    private javax.swing.JButton cerrarStockMinimo;
    private javax.swing.JTextField descuentoVenta;
    private javax.swing.JSpinner diaIngreso;
    private javax.swing.JSpinner diaIngreso1;
    private javax.swing.JSpinner diaNacimiento;
    private javax.swing.JSpinner diaNacimiento1;
    private javax.swing.JLabel fondo;
    private javax.swing.JTextField ingresaApellidoPersona;
    private javax.swing.JTextField ingresaApellidoPersona1;
    private javax.swing.JTextField ingresaApellidoVenta;
    private javax.swing.JTextField ingresaCantidad;
    private javax.swing.JTextField ingresaCantidad1;
    private javax.swing.JTextField ingresaCodPostal;
    private javax.swing.JTextField ingresaCodPostal1;
    private javax.swing.JTextField ingresaCodProd;
    private javax.swing.JTextField ingresaCodProd1;
    private javax.swing.JTextField ingresaDNI;
    private javax.swing.JTextField ingresaDNI1;
    private javax.swing.JTextField ingresaDniVenta;
    private javax.swing.JTextField ingresaDomicilio;
    private javax.swing.JTextField ingresaDomicilio1;
    private javax.swing.JTextField ingresaFiltroFicha;
    private javax.swing.JTextField ingresaFiltroFicha1;
    private javax.swing.JTextField ingresaFiltroProd;
    private javax.swing.JTextField ingresaFiltroProd1;
    private javax.swing.JTextField ingresaFiltroProd2;
    private javax.swing.JTextField ingresaLinea;
    private javax.swing.JTextField ingresaLinea1;
    private javax.swing.JTextField ingresaLocalidad;
    private javax.swing.JTextField ingresaLocalidad1;
    private javax.swing.JTextField ingresaNombrePersona;
    private javax.swing.JTextField ingresaNombrePersona1;
    private javax.swing.JTextField ingresaNombreProd;
    private javax.swing.JTextField ingresaNombreProd1;
    private javax.swing.JTextField ingresaNombreVenta;
    private javax.swing.JTextField ingresaPrecio;
    private javax.swing.JTextField ingresaPrecio1;
    private javax.swing.JTextField ingresaTelefono;
    private javax.swing.JTextField ingresaTelefono1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBoxEstCivil;
    private javax.swing.JComboBox<String> jComboBoxEstCivil1;
    private javax.swing.JComboBox<String> jComboBoxNeto;
    private javax.swing.JComboBox<String> jComboBoxNeto1;
    private javax.swing.JComboBox<String> jComboBoxTipo;
    private javax.swing.JComboBox<String> jComboBoxTipo1;
    private javax.swing.JComboBox<String> jComboBoxTipo2;
    private javax.swing.JComboBox<String> jComboBoxTipo3;
    private javax.swing.JComboBox<String> jComboBoxTipo4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable jTable6;
    private javax.swing.JTable jTable7;
    private javax.swing.JTable jTable9;
    private javax.swing.JLabel labelApellido;
    private javax.swing.JLabel labelApellido1;
    private javax.swing.JLabel labelApellido2;
    private javax.swing.JLabel labelCantidad;
    private javax.swing.JLabel labelCantidad1;
    private javax.swing.JLabel labelCodPostal;
    private javax.swing.JLabel labelCodPostal1;
    private javax.swing.JLabel labelDNI;
    private javax.swing.JLabel labelDNI1;
    private javax.swing.JLabel labelDNI2;
    private javax.swing.JLabel labelDomicilio;
    private javax.swing.JLabel labelDomicilio1;
    private javax.swing.JLabel labelEstadoCivil;
    private javax.swing.JLabel labelEstadoCivil1;
    private javax.swing.JLabel labelFechaIngreso;
    private javax.swing.JLabel labelFechaIngreso1;
    private javax.swing.JLabel labelFechaNac;
    private javax.swing.JLabel labelFechaNac1;
    private javax.swing.JLabel labelIdProd;
    private javax.swing.JLabel labelIdProd1;
    private javax.swing.JLabel labelLocalidad;
    private javax.swing.JLabel labelLocalidad1;
    private javax.swing.JLabel labelNeto;
    private javax.swing.JLabel labelNeto1;
    private javax.swing.JLabel labelNombrePersona;
    private javax.swing.JLabel labelNombrePersona1;
    private javax.swing.JLabel labelNombrePersona2;
    private javax.swing.JLabel labelNuevaLider;
    private javax.swing.JLabel labelNuevaLider1;
    private javax.swing.JLabel labelNuevaLider2;
    private javax.swing.JLabel labelTelefono;
    private javax.swing.JLabel labelTelefono1;
    private javax.swing.JLabel labelTipoPersona;
    private javax.swing.JLabel labelTipoPersona1;
    private javax.swing.JLabel labelTipoPersona2;
    private javax.swing.JSpinner mesIngreso;
    private javax.swing.JSpinner mesIngreso1;
    private javax.swing.JSpinner mesNacimiento;
    private javax.swing.JSpinner mesNacimiento1;
    private javax.swing.JPanel panelCaja;
    private javax.swing.JPanel panelPersonas;
    private javax.swing.JPanel panelProductos;
    private javax.swing.JPanel panelRankings;
    private javax.swing.JPanel pestañaEditarPersona;
    private javax.swing.JPanel pestañaEditarProducto;
    private javax.swing.JPanel pestañaFichasParaVenta;
    private javax.swing.JPanel pestañaNuevoProd;
    private javax.swing.JPanel pestañaPersonas;
    private javax.swing.JPanel pestañaRankingExpertas;
    private javax.swing.JPanel pestañaRankingLider;
    private javax.swing.JPanel pestañaSeleccionarProductoVenta;
    private javax.swing.JPanel pestañaStockMinimo;
    private javax.swing.JPanel pestañaVenta;
    private javax.swing.JPanel pestañaVerFichas;
    private javax.swing.JPanel pestañaVerListado;
    private javax.swing.JButton seleccionarFichaVenta;
    private javax.swing.JButton seleccionarFichaVenta1;
    private javax.swing.JTextField subtotalVenta;
    private javax.swing.JLabel tituloEditarProducto;
    private javax.swing.JLabel tituloListadoFichas;
    private javax.swing.JLabel tituloListadoFichas1;
    private javax.swing.JLabel tituloListadoFichas2;
    private javax.swing.JLabel tituloListadoFichas4;
    private javax.swing.JLabel tituloListadoProd;
    private javax.swing.JLabel tituloListadoProd1;
    private javax.swing.JLabel tituloListadoProd2;
    private javax.swing.JLabel tituloNuevoProd;
    private javax.swing.JTextField totalVenta;
    // End of variables declaration//GEN-END:variables
    private DefaultTableModel modelo;
    private DefaultTableModel modeloFichas;
    private DefaultTableModel modeloProductosVenta;
    private int stockMinimo;
    private Double precioTotalVenta;
    private Double precioSubtotalVenta;
    private final Double DESCUENTOLIDER=0.10;
    private final Double DESCUENTOEXPERTA=0.45;
    private int contadorVenta;
}
